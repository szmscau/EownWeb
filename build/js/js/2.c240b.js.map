{"version":3,"sources":["webpack:///./src/route/journey/index.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./src/components/footer/style.less","webpack:///./src/components/title/style.less","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./src/components/footer/style.less?1648","webpack:///./src/components/footer/index.js","webpack:///./src/components/title/style.less?91a1","webpack:///./src/components/title/index.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/route/journey/style.less","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./src/route/journey/style.less?ed34","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/map/js/china.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///(webpack)/buildin/global.js"],"names":["__webpack_require__","geoCoordMap","上海","东莞","东营","中山","临汾","临沂","丹东","丽水","乌鲁木齐","佛山","保定","兰州","包头","北京","北海","南京","南宁","南昌","南通","厦门","台州","合肥","呼和浩特","咸阳","哈尔滨","唐山","嘉兴","大同","大连","天津","太原","威海","宁波","宝鸡","宿迁","常州","广州","廊坊","延安","张家口","徐州","德州","惠州","成都","扬州","承德","拉萨","无锡","日照","昆明","杭州","枣庄","柳州","株洲","武汉","汕头","江门","沈阳","沧州","河源","泉州","泰安","泰州","济南","济宁","海口","淄博","淮安","深圳","清远","温州","渭南","湖州","湘潭","滨州","潍坊","烟台","玉溪","珠海","盐城","盘锦","石家庄","福州","秦皇岛","绍兴","聊城","肇庆","舟山","苏州","莱芜","菏泽","营口","葫芦岛","衡水","衢州","西宁","西安","贵阳","连云港","邢台","邯郸","郑州","鄂尔多斯","重庆","金华","铜川","银川","镇江","长春","长沙","长治","阳泉","青岛","韶关","峨眉","潮州","Journey","myChart","echarts","init","document","getElementById","convertData","data","res","i","length","dataItem","fromCoord","name","toCoord","push","fromName","toName","coords","color","series","value","forEach","item","type","zlevel","effect","show","period","trailLength","symbolSize","lineStyle","normal","width","curveness","symbol","opacity","coordinateSystem","rippleEffect","brushType","label","position","formatter","val","itemStyle","map","concat","console","log","option","backgroundColor","title","text","subtext","left","textStyle","tooltip","trigger","legend","orient","top","selectedMode","geo","emphasis","roam","areaColor","borderColor","setOption","_react2","default","createElement","_title2","id","className","style","_footer2","index","React","Component","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","prototype","toString","arrayProto","Array","nativeForEach","nativeFilter","filter","nativeSlice","slice","nativeMap","nativeReduce","reduce","methods","clone","source","result","typeStr","call","isPrimitive","len","Ctor","constructor","from","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","defaults","overlay","_ctx","createCanvas","each","obj","cb","context","bind","func","args","arguments","apply","nodeType","ownerDocument","primitiveKey","HashMap","isArr","thisMap","this","visit","set","get","removeKey","exports","$override","fn","mergeAll","targetAndSources","extend","getContext","indexOf","array","inherits","clazz","baseClazz","clazzPrototype","F","prop","superClass","mixin","isArrayLike","memo","find","curry","isFunction","isString","isTypedArray","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","assert","condition","message","Error","trim","str","replace","setAsPrimitive","createHashMap","concatArray","a","b","newArray","offset","noop","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","throttle","seriesColor","aria","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","MessageCenter","ECharts","dom","theme","opts","themeStorage","group","_dom","zr","_zr","renderer","devicePixelRatio","height","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","api","_api","getCoordinateSystems","getComponentByElement","el","modelInfo","__ecComponentInfo","_model","getComponent","mainType","parent","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","_pendingActions","animation","on","_onframe","ecIns","isFinished","unfinished","bindRenderedEvent","off","one","echartsProto","doConvertPixel","methodName","finder","ecModel","coordSysList","parseFinder","coordSys","_disposed","scheduler","silent","prepare","updateMethods","update","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","Date","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","getZr","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","getSvgDataUrl","svgSupported","list","storage","getDisplayList","stopAnimation","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","connectedGroups","Infinity","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","x","y","image","add","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","model","containPoint","getVisual","visualType","defaultMainType","seriesModel","getData","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","payload","restoreData","create","clearColorPalette","render","setBackgroundColor","colorArr","parse","stringify","performPostUpdateFuncs","updateTransform","componentDirtyList","componentView","__alive","seriesDirtyMap","eachSeries","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","query","excludeSeriesId","normalizeToArray","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","pendingActions","shift","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","componentIndex","renderTask","dispose","remove","splice","dirtyList","updateZ","renderComponents","updatePayload","dirty","perform","getPerformArgs","blendMode","traverse","isGroup","blend","setStyle","eachPendingDisplayable","displayable","updateBlend","elCount","node","useHoverLayer","updateHoverLayerStatus","postUpdateFuncs","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","z","eveName","e","dataModel","getDataParams","dataType","eventData","actionType","eventType","isDisposed","clear","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerAction","test","registerVisual","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","dependencies","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","getMap","dataTool","___ec_export","pathTool","matrix","vector","Path","Transformable","ZImage","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","round","EMPTY_OBJ","makePath","pathData","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimize","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","insideRollback","textFill","textStroke","textStrokeWidth","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","autoColor","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","isRectText","textPosition","getShallow","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","parentModel","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textBorderColor","textBorderWidth","originalTextPosition","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","transform","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","onload","subPixelOptimizeLine","param","shape","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setText","labelModel","defaultColor","getFont","gTextStyleModel","join","initProps","getTransform","ancestor","mat","identity","mul","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","elMap","elMap1","anid","oldEl","newProp","getAnimatableProps","rotation","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","RADIAN_EPSILON","TIME_REG","quantityExponent","floor","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","exec","hour","toUpperCase","UTC","quantity","nice","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","DUMMY_COMPONENT_NAME_PREFIX","isIdInner","cptOption","innerUniqueIndex","has","defaultEmphasis","subOpts","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","isDataItemOption","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","isNameSpecified","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","isData","queryDataIndex","indexOfName","makeInner","random","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","global","dev","formatUtil","LOCATION_PARAMS","HV_NAMES","boxLayout","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","box","vbox","hbox","getLayoutRect","positionInfo","containerRect","margin","containerWidth","containerHeight","verticalMargin","horizontalMargin","copyLayoutParams","getAvailableSize","positionElement","h","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newOption","ignoreSize","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","copy","getLayoutParams","ArrayCtor","Float32Array","sqrt","lenSquare","lengthSquare","distance","v1","v2","dist","distanceSquare","distSquare","out","scaleAndAdd","div","dot","scale","s","normalize","d","negate","lerp","t","textContain","numberUtil","replaceReg","replaceMap","&","<",">","\"","'","encodeHTML","c","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","substr","truncateText","getTextRect","addCommas","toCamelCase","upperCaseFirst","group1","charAt","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","formatTplSimple","getTooltipMarker","extraCssText","formatTime","isUTC","date","utc","M","S","capitalFirst","lt","rb","lb","rt","vec2","v2ApplyTransform","union","other","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","plain","_default","module","Displayable","PathProxy","pathContain","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","Model","componentUtil","_clazz","enableClassManagement","boxLayoutMixin","inner","defaultOption","dependentModels","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","mergeOption","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","deps","getClassesByMainType","Clazz","unshift","wx","getSystemInfoSync","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","detect","userAgent","_format","colorPaletteMixin","dataFormatMixin","_layout","createTask","_sourceHelper","prepareSource","getSource","retrieveRawValue","legendDataProvider","visualColorAccessPath","dataTask","dataTaskCount","reset","dataTaskReset","getInitialData","wrapData","dataBeforeProcessed","autoSeriesName","themeSubType","hasClass","fillDataTextStyle","newSeriesOption","getRawData","task","getCurrentTask","getLinkedData","setData","modifyOutputEnd","setOutputEnd","outputData","getBaseAxis","formatTooltip","multipleSeries","formatSingleValue","tooltipDims","mapDimension","tooltipDimLen","getRawValue","isValueArr","formattedValue","vertially","dimItem","getDimensionInfo","displayName","setEachItem","dim","dimInfo","otherDims","dimType","dimHead","valStr","formatArrayValue","colorEl","getName","seriesName","animationEnabled","getColorFromPalette","scope","requestColorNum","coordDimToDataDim","coordDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","pipelineContext","dataDims","nameArr","dataDim","getSeriesAutoName","cloneShallow","dataTaskProgress","end","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","stylesInDom","isOldIE","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","domStyle","refs","parts","addStyle","listToStyles","newStyles","base","part","css","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","undefined","attrs","addAttrs","keys","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","childNodes","useSourceMap","content","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","cssWithMappingToString","modules","mediaQuery","alreadyImportedModules","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","r","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","SymbolClz","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","createSymbol","keepAspect","symbolPath","setColor","DataDiffer","Source","_dataProvider","defaultDimValueGetters","DefaultDataProvider","summarizeDimensions","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","propName","_calculationInfo","List","hostModel","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","coordDimIndex","createInvertedIndices","_dimensionInfos","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawData","_rawExtent","_extent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","getRawValueFromStore","dimIndex","rawIndex","chunkSize","chunkIndex","chunkOffset","chunk","ordinalMeta","categories","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","originalChunk","newDimStore","hasItemOption","getDimension","getDimensionsOnCoord","dataDimsOnCoord","dimensionsSummary","encodeFirstDimNotExtra","dims","initData","nameList","dimValueGetter","isInstance","_nameRepeatCount","defaultDimValueGetter","sourceFormat","_dimValueGetter","_initDataFromProvider","pure","getProvider","rawData","start","persistent","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","itemName","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","getItem","dimStorage","dimRawExtent","nameDim","nameDimChunk","clean","invertedIndices","getIndices","indices","thisCount","newIndices","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","getDataExtent","dimData","initialExtent","dimExtent","currEnd","getApproximateExtent","setApproximateExtent","extent","getCalculationInfo","setCalculationInfo","getSum","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","rawDataIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","getRawDataItem","contextCompat","dimSize","filterSelf","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","getItemModel","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","TRANSFERABLE_METHODS","OrdinalScale","IntervalScale","Scale","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getOrdinalMeta","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","axis","barWidthAndOffset","adjustedScale","axisExtent","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tickValue","getAxisRawValue","tick","getLabel","niceScaleExtent","splitNumber","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","ifAxisCrossZero","estimateLabelUnionRect","axisModel","isBlank","realNumberScaleTicks","tickCount","isCategory","categoryScaleExtent","getTicks","textRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","axisLabelModel","step","ceil","unrotatedSingleRect","singleRect","coordinateSystemCreators","_coordinateSystems","coordinateSystems","creater","coordinateSystemCreator","imageHelper","_util","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","font","textLines","l","measureText","adjustTextX","adjustTextY","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","parsePlainText","padding","truncate","lineHeight","lines","outerHeight","truncOuterHeight","truncOuterWidth","outerWidth","parseRichText","contentBlock","lastIndex","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","tokenStyle","token","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","getRichTextRect","getPlainTextRect","adjustTextPositionOnRect","halfHeight","makeFont","textFont","isDimensionStacked","stackedDim","enableDataStack","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","isExtraCoord","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","getStackedDimension","targetDim","createDimensions","SOURCE_FORMAT_ORIGINAL","getDimensionTypeByAxis","getCoordSysDefineBySeries","seriesDataToSource","coordSysDimDefs","coordSysName","registeredCoordSys","coordSysDefine","coordSysDims","axisMap","firstCategoryDimIndex","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","categoryAxisMap","stackCalculationInfo","sampleItem","firstDataNotNull","isNeedCompleteOrdinalData","itemOpt","dimName","clazzUtil","createRenderPlanner","renderPlanner","Chart","renderTaskPlan","renderTaskReset","highlight","toggleHighlight","downplay","removeAll","incrementalPrepareRender","incrementalRender","chartProto","elSetState","state","childCount","progressiveRender","progressMethodMap","progress","forceFirstProgress","TYPE_DELIMITER","IS_CONTAINER","ret","classBase","superCall","superApply","RootClass","mandatoryMethods","proto","ExtendedClass","Clz","classAttr","entity","registerClass","checkClassType","container","makeContainer","componentMainType","throwWhenNotFound","o","getAllClassMainTypes","types","hasSubTypes","originalExtend","Dispatcher","isDomLevel2","addEventListener","MOUSE_EVENT_REG","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","stop","preventDefault","stopPropagation","cancelBubble","returnValue","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","attachEvent","removeEventListener","detachEvent","notLeftMouse","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","g","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","iv","op","ep","fname","alpha","hsla2rgba","hsla","rgba","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","arrColor","level","toHex","modifyHSL","H","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","rgba2hsla","modifyAlpha","ctor","_number","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","inverse","onBand","fixExtentWithBands","nTick","coord","containData","dataToCoord","coordToData","pointToData","getTicksCoords","tickModel","getTickModel","ticks","ticksCoords","alignWithLabel","tickCategoryInterval","ticksLen","last","ticksItem","fixOnBandTicksCoords","getViewLabels","labels","getBandWidth","isHorizontal","getRotate","_vector","v2Create","v2DistSquare","mathPow","mathSqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","quadraticAt","cubicDerivativeAt","cubicRootAt","roots","A","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_t","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","zrColor","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","mappingMethod","thisOption","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","originIndex","preprocessForPiecewise","categoryMap","cate","visualArr","setVisualToOption","preprocessForSpecifiedCategory","mapValueToVisual","normalized","getNormalizer","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","makeDoMap","liftZ","getter","setter","symbolCfg","doMapToArray","applyValue","sourceExtent","findPieceIndex","pieceIndex","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","getPathToRoot","reverse","retrieveTargetInfo","validPayloadTypes","root","tree","targetNode","contains","targetNodeId","getNodeById","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","axisPointerModelHelper","AxisView","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","force","axisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","matrixUtil","makeAxisEventDataBase","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","getLineStyle","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","pos","axisTickLabel","tickEls","axisBuilder","lineStyleModel","tickLen","tickCoord","tickEl","buildAxisTick","labelEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","axisLabelShow","labelMargin","labelRotation","labelLayout","innerTextLayout","rawCategoryData","isSilent","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textColor","getTextColor","textEl","targetType","decomposeTransform","buildAxisLabel","axisName","axisNameAvailableWidth","nameLocation","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","tooltipOpt","formatterParams","__fullText","__truncatedText","axisRotation","current","firstRect","nextRect","mRotationBack","seriesType","defaultSymbolType","legendSymbol","performRawSeries","symbolKeepAspect","isSeriesFiltered","hasCallback","dataEach","rawValue","itemModel","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","newDataIndexMap","oldDataKeyArr","newDataKeyArr","toolbox","polygon","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","stack","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","radar","treemap","boxplot","candlestick","heatmap","parallel","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","ORIGIN_METHOD","RATE","THROTTLE_TYPE","delay","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","_sourceType","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","_source","_data","_offset","_dimSize","providerMethods","seriesLayoutBy","providerProto","arrayRows_column","startIndex","appendDataSimply","arrayRows_row","row","objectRows","countSimply","getItemSimply","keyedColumns","dimensionsDefine","col","newData","newCol","oldCol","typedArray","rawValueGetters","arrayRows","getRawValueSimply","getDimValueSimply","converDataValue","parseAndCollect","retrieveRawAttr","arrySlice","_$handlers","_h","argLen","triggerWithContext","dimensionsInfo","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","completeDimensions","dimsDef","encodeDef","encodeDefine","dimCount","dimensionsCount","generateCoordCount","originalLarge","large","originalProgressive","progressive","curve","bbox","CMD","Q","Z","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","excludes","includes","dataZoomModel","getTargetCoordInfo","coordSysLists","eachTargetAxis","dimNames","axisIndex","coordModel","store","coordIndex","axisModels","save","helper","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","axisTrigger","coordSysAxesInfo","collect","getSpanSign","handleEnds","handleIndex","sign","restrict","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","legendModels","findComponents","isSelected","gridModel","getRect","getItemStyle","xAxis","yAxis","grid","isLargeRender","stackResultDim","segCount","tmpIn","tmpOut","dataToPoint","SymbolDraw","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","isIgnore","clipShape","normalizeUpdateOpt","makeSeriesScope","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","cursorStyle","updateData","oldData","SymbolCtor","seriesScope","newIdx","symbolEl","oldIdx","fadeOut","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","incremental","enableAnimation","OTHER_DIMENSIONS","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","coordDimArr","defaultTooltip","otherDim","otherDimArr","dimArr","encodeLabel","encodeTooltip","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SERIES_LAYOUT_BY_COLUMN","SERIES_LAYOUT_BY_ROW","fromDataset","dimensionsDetectCount","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","Style","Element","RectText","__clipPaths","invisible","draggable","dragging","culling","cursor","inplace","afterBrush","rectContain","animateStyle","useStyle","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","debugMode","hmr","locals","hot","accept","__WEBPACK_OUTDATED_DEPENDENCIES__","newContent","Footer","_props","onClick","clickHandle","Title","location","baseUrl","protocol","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","Creater","mappings","__hidden","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","getValueState","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","valueState","incrementalApplyVisual","axisHelper","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","viewWidth","viewHeight","confineInContainer","bgColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","eventTool","interactionMutex","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","_dragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","setting","Geo","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","center","aspectScale","useCenterAndSize","viewRect","getBoxLayoutParams","setViewRect","setCenter","setZoom","setGeoCoords","geoCoord","addGeoCoord","geoCreator","geoList","mapData","zoomLimit","geoIndex","mapModelGroupBySeries","eachSeriesByType","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","getFilledRegions","originRegionArr","nameMap","regionsArr","dataNameMap","getTargetSeries","paletteScope","seiresModelMap","__paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","axisPointerEnabled","coordSysKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","snap","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","crossStyle","makeAxisPointerModel","involveSeries","axisInfo","useHandle","seriesModels","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","collectSeriesInfo","axisDefault","OrdinalMeta","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","createByAxisModel","registerSubTypeDefaulter","getDefaultLabel","symbolProto","getSymbolSize","getScale","driftSymbol","drift","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","elStyle","symbolInnerColor","z2Origin","__z2Origin","useNameLabel","onEmphasis","ratio","onNormal","keepLabel","STACK_PREFIX","LargeArr","getSeriesStackId","getAxisKey","isOnCartesian","isInLargeMode","barSeries","seriesInfoList","baseAxis","bandWidth","barWidth","barMaxWidth","barGap","barCategoryGap","axisKey","stackId","doCalBarWidthAndOffset","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","largeLayout","cartesian","valueAxis","getOtherAxis","valueDim","baseDim","valueAxisHorizontal","valueDimIdx","largePoints","valuePair","valueAxisStart","getValueAxisStart","stacked","getAxesOnZeroOf","toGlobalCoord","getGlobalExtent","getLayoutOnAxis","widthAndOffsets","offsetCenter","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","isValueAxisH","baseValue","baseCoord","roundNumber","_interval","_intervalPrecision","thisExtent","unionExtent","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","_setting","getSetting","unionExtentFromData","_isBlank","componentProto","normalizeDimensionsDefine","arrayRowsTravelFirst","maxLoop","doGuessOrdinal","sample","detectValue","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","seriesOption","sourceHeader","datasetIndex","getDatasetModel","datasetOption","completeResult","findPotentialName","potentialNameDimIndex","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","firstNotOrdinal","nameDimIndex","makeDefaultEncode","guessOrdinal","subTypeDefaulters","defaulter","determineSubType","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","topologicalTravel","targetNameList","fullNameList","noEntryList","thisItem","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","Gradient","addColorStop","roundRectHelper","fixShadow","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","textBaseline","applyTextRotation","textOrigin","placeToken","hostEl","lineTop","needDrawBackground","drawBackground","getTextXForPadding","setCtx","getFill","strokeText","fillText","isPlainBg","onBgImageLoaded","getBoxPosition","blockHeiht","baseX","baseY","maxValue","lastIndexOf","__textCotentBlock","boxPos","boxX","boxY","xLeft","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","drawRichText","renderRichText","textX","textY","needDrawBg","renderPlainText","_children","__storage","children","childOfName","_doAdd","addBefore","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","childRect","guid","Handler","Storage","Painter","Animation","HandlerProxy","useVML","painterCtors","ZRender","rendererType","vml","handerProxy","getViewportRoot","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","config","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","getInstance","registerPainter","ZText","_graphic","svgPath","svgImage","svgText","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","getDefs","isForceCreating","defs","getElementsByTagName","element","onUpdate","addDom","removeDom","getDoms","doms","tagName","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","getTextSvgElement","__textSvgEl","getSvgElement","__svgEl","svgURI","createElementNS","arrayJoin","NONE","mathRound","PI2","degree","round4","svgEl","bindStyle","isText","pathHasFill","pathHasStroke","lineJoin","miterLimit","pathStr","dataLength","cmdStr","nData","dThetaPositive","isCircle","pathDataToString","svgTextDrawRectText","HTMLImageElement","dw","dh","__imageSrc","setAttributeNS","attrXLink","textSvgEl","getVerticalAlignForSvg","newPos","transformText","transformCoordToGlobal","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","markerGroupMap","markerModel","__keep","markerModelKey","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","numCalculate","markerTypeCalculator","average","valueIndex","valueDataDim","dataDimToCoordDim","baseDataDim","dataTransform","hasXAndY","radiusAxis","angleAxis","dataFilter","hasXOrY","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","html","COORDS","createNameEach","capitalNames","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","nodes","records","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","Polar","_axisHelper","updatePolarScale","polar","getAngleAxis","getRadiusAxis","setAxis","polarCreator","polarList","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","resizePolar","throttleUtil","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisDim","doClear","buildLabel","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","createCover","controller","brushOption","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","localZero","clipPath","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","take","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","resetCursor","getLineRenderer","localTrack","ends","xyIndex","otherExtent","getLinearBrushOtherExtent","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","lineData","setLinePoints","targetShape","cp1","cpx1","cpy1","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","invScale","fromPos","pointAt","toPos","tangent","tangentAt","atan2","__position","halfPercent","cp","__verticalAlign","__textAlign","createLine","_updateCommonStl","linePoints","hoverLineStyle","visualColor","visualOpacity","defaultLabelColor","showLabel","hoverShowLabel","rawVal","normalText","emphasisText","labelStyle","linePath","LineGroup","LineDraw","_ctor","lineDrawProto","isPointNaN","pt","lineNeedsDraw","pts","lineDraw","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","_clearIncremental","_incremental","clearDisplaybles","linkList","TreeNode","hostTree","depth","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","order","suppressVisitSub","updateDepthAndHeight","getAncestors","includeSelf","ancestors","getValue","levelModel","getLevelModel","isExpand","getLeavesModel","isAncestorOf","isDescendantOf","getNodeByDataIndex","getNodeByName","clearLayouts","createTree","dataRoot","treeOptions","levels","leaves","listData","dimMax","buildHierarchy","dataNode","addChild","mainData","struct","structAttr","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","topTarget","updateSelectedMap","_targetList","_selectTargetMap","targetMap","select","selected","unSelect","toggleSelected","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","onZero","onZeroAxisIndex","canOnZeroToAxis","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","coordBase","axisExtentSum","toLocalCoord","updateAxisTransform","labelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","xAxisModel","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","axisPosition","addAxis","isCartesian2D","axesModels","findAxesModels","axesTypes","grids","labelDims","vals","Task","define","_reset","_plan","_onDirty","onDirty","_dirty","taskProto","performArgs","planResult","upTask","_upstream","skip","__pipeline","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","modBy","modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","doProgress","outputDueEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","_callingProgress","pipe","downTask","getUpstream","getDownstream","DIMENSION_LABEL_REG","componentSubType","marker","labelProp","Displayble","IncrementalDisplayble","_displayables","_temporaryDisplayables","_cursor","notClear","addDisplayable","notPersistent","addDisplayables","displayables","extremity","xDim","yDim","fromPoints","tx","ty","vec2Min","vec2Max","globalImageCache","imageOnLoad","cachedImgObj","__cachedImgObj","pending","pendingWrap","cbPayload","newImageOrSrc","__zrImageSrc","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","mergeAt","start1","length1","start2","length2","cursor1","cursor2","dest","count1","count2","exit","_minGallop","mergeLow","customCursor","customDest","mergeHigh","mergeRuns","forceMergeRuns","pushRun","_runStart","_runLength","remaining","ts","minRun","minRunLength","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","doCreateNode","urn","win","vmlInited","doc","namespaces","zrvml","createNode","initVML","styleSheets","createStyleSheet","addRule","ATTR","giveStore","newSnapshot","dataZoomId","percentRange","snapshot","setSelected","getItemAlign","visualMapModel","itemSize","modelOption","itemAlign","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","autoPositionValues","doRender","renderBackground","getControllerVisual","targetValue","visualCluster","forceState","visualObj","controllerVisuals","visualMapping","convertOpacityToAlpha","positionGroup","visualDefault","active","inactive","visualSolution","replacableOptionKeys","dataBound","inRange","outOfRange","itemWidth","itemHeight","contentColor","inactiveColor","borderWidth","textGap","_dataExtent","targetVisuals","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","eachTargetSeries","isTargetSeries","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","getDataDimension","optDim","listDimensions","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","visuals","getVisualMeta","VISUAL_PRIORITY","getColorVisual","resultVisual","mapping","createOnAllSeries","resetDefines","visualMetaList","visualMeta","stops","outerColors","concreteDim","pieces","calculable","splitList","linkedNodesFinder","effectedModels","seriesModelMap","getTargetSeriesModels","overallReset","filterData","valueRange","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getSize","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","layoutBox","boxLayoutParams","viewportSize","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","renderInner","maxSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","dataName","LegendModel","_updateData","legendData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","itemGap","viewHelper","cartesianAxisHelper","CartesianAxisPointer","pixelValue","pointerShapeBuilder","labelInside","currPosition","cursorOtherValue","getAxisDimIndex","shadow","onLeave","record","doEnter","currTrigger","useHandler","dis","pendings","showTip","hideTip","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","rectBound","positionMap","horizontal","vertical","isPolyline","isLarge","lineCoords","totalCoordsCount","getLineCoordsCount","getLineCoords","_createPolyline","polylineProto","curveUtil","EffectLine","_updateEffectSymbol","effectLineProto","effectModel","_updateEffectAnimation","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","_loop","__t","animator","when","during","updateSymbolPosition","done","__p1","__cp1","__p2","createListSimply","seriesModelMixin","_baseAxisDim","addOrdinal","xAxisType","yAxisType","coordDims","baseAxisDimIndex","baseAxisDim","baseAxisType","otherAxisType","newOptionData","newItem","defaultValueDimensions","keysFunction","sortKeysFunction","sortKeys","entries","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","graphicUtil","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","Parallel","parallelModel","parallelPreprocessor","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","triggerOn","circularLayout","nodeData","unitAngle","eachEdge","node1","node2","x12","y12","simpleLayoutEdge","simpleLayout","getGraph","Graph","createListFromArray","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","addEdge","coordSysCtor","edgeData","datas","datasAttr","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","moveSubtree","wl","wr","change","modifier","prelim","defaultSeparation","defaultAncestor","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","getViewRect","DATAS","MAIN_DATA","transferInjection","linkAll","linkSingle","changeInjection","cloneShallowInjection","updateCenterAndZoom","previousZoom","getZoom","getCenter","zoomMin","zoomMax","fixX","fixY","seriesGroup","updateViewOnPan","controllerHost","updateViewOnZoom","newZoom","zoomScale","getStore","resourceKey","userKey","roamHelper","getFixedItemStyle","updateMapSelected","mapOrGeoModel","otherRegionEl","__regions","region","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","draw","fromView","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","paths","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","geometries","geometry","exterior","interiors","isDataNaN","itemLayout","_updateController","mapDraw","updateMapSelectHandler","makeActionBase","mouseX","mouseY","getViewRectAfterRoam","TransformDummy","View","_roamTransformable","_rawTransformable","_center","_zoom","doConvert","transformTo","_viewRect","rawTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","_rawTransform","noRoam","actionInfos","fixPosition","labelPositionOutside","setLabel","getMarkerPosition","clampData","legendHoverLink","barMinAngle","largeThreshold","progressiveChunkMode","otherAxisOnZeroOf","rawAxisPosition","axisOffset","posBound","onZeroCoord","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","categoryAxis","deduplication","timeAxis","logAxis","logBase","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","getAxisType","extraOption","fixClipWithShadow","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","dir","smoothMin","smoothMax","smooth","smoothMonotone","connectNulls","prevIdx","prevP","ctrlLen","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","smoothConstraint","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","stackedOnBBox","prepareDataCoordInfo","valueOrigin","valueStart","getValueStart","valueAxisDim","baseDataOffset","dataDimsForPoint","getStackedOnPoint","dataCoordInfo","stackedData","windingLine","isAroundEqual","polygonContain","Region","MAX_NUMBER","loopGeo","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","coordinates","c2","decode","featureObj","fixExtent","_needCollect","needCollect","_deduplication","_map","dedplication","getOrCreateMap","getOrdinal","genName","fromZero","sysDims","dataDimNameMap","coordDimNameMap","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","dimDefItem","userDimName","resultItem","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","extra","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","util","echartsAPIList","chartInstance","fetchers","cartesian2d","parallelAxisIndex","fetch","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","paletteNum","getNearestColorPalette","globalCoord","smoothSpline","smoothBezier","controlPoints","cp2","shadowTemp","orignalBrush","modified","clipPaths","x_","normalizeRadian","_l","_a","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","newCptOptionList","existComponent","getComponentsByTypes","ComponentModelClass","createSeriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","q","indexAttr","idAttr","nameAttr","queryCond","components","queryResult","oneSeries","getSeriesByType","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","r1","r2","r3","r4","total","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","Pattern","repeat","createPattern","SHADOW_PROPS","STYLE_COMMON_PROPS","createLinearGradient","createRadialGradient","styleProto","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","LinkedList","linkedListProto","insert","entry","Entry","insertEntry","LRU","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","Clip","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","easing","oneTrackDone","keyframes","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","lastValue","getArrayDim","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","clip","life","_delay","onframe","frame","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","Animatable","afterUpdate","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","idStart","ShadowManager","hasShadow","addWithoutUpdate","svgElement","_shadowDom","_shadowDomId","updateDom","domChild","blur","stdDeviation","ClippathManager","parentEl","clipPathEl","svgProxy","pathEl","cloneNode","_textDom","zrLog","GradientManager","gradient","Diff","buildValues","componentPos","componentLen","oldPos","added","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","arrayDiff","parseInt10","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","_opts","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","_paintList","background","visibleList","listLen","newVisibleList","prevSvgElement","textSvgElement","_getDefs","display","_getSize","_width","_height","viewportStyle","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","outerHTML","vmlCore","VMLPainter","vmlViewport","vmlRoot","_vmlRoot","_vmlViewport","onRemove","onAdd","_firstPaint","__alreadyNotVisible","brushVML","_getWidth","_getHeight","vmlViewportStyle","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","append","getZIndex","setColorAndOpacity","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","rectWidth","rectHeight","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateFillNode","dashstyle","updateStrokeNode","_vmlEl","needTransform","strokeEl","weight","nPoint","zIndex","removeRectText","appendRectText","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sh","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","body","ex","offsetWidth","fromTextEl","fontString","variant","fontVariant","family","getFontStyle","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","String","history","featureManager","restoreLang","Restore","icon","onclick","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","_isZoomActive","featureModel","zoomActive","dataZoomSelectActive","setIconStatus","brushTargetManager","retrieveAxisSetting","updateZoomBtnStatus","updateBackBtnStatus","nextActive","_dispatchZoomAction","setBatch","found","dzModel","findDataZoom","minMaxSpan","getMinMaxSpan","dataZoomOpts","toolboxOpt","feature","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","$fromToolbox","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","getContentFromModel","tables","seriesGroupByCategoryAxis","otherSeries","meta","groupSeries","headers","columns","items","assembleOtherSeries","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","header","parseTSVContents","blockMeta","hasName","parseListContents","DataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","seriesOpt","originalData","tryMergeDataOption","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","markPoint","markLine","radioTypes","radio","newSeriesOpt","getAxesByScale","currentType","saveAsImageLang","SaveAsImage","unusable","$a","download","MouseEvent","msSaveOrOpenBlob","bstr","u8arr","Uint8Array","open","write","evt","bubbles","cancelable","dispatchEvent","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","featureName","oldName","featureOpt","isUserFeatureName","Feature","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconName","createIconPaths","iconStatus","ToolboxModel","showTitle","iconStyle","TimelineAxis","coordExtent","TimelineView","_axis","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","dimIdx","boundIdx","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","normalLabelModel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","me","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","axisCoord","nextIndex","noAnimation","TimelineModel","autoPlay","rewind","playInterval","_names","_initData","setCurrentIndex","isIndexMax","setPlayState","dataArr","idxArr","SliderTimelineModel","checkpointStyle","animationDuration","controlStyle","playIcon","stopIcon","nextIcon","prevIcon","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","timelineOpt","timeline","ec2Types","compatibleEC2","preprocessor","colorUtil","markerHelper","markAreaTransform","maModel","ltCoord","rbCoord","isInifinity","ifMarkLineHasOnlyDim","otherDimIndex","markAreaFilter","getSingleMarkerEndPoint","xPx","yPx","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","coordDimsInfos","optData","createList","__data","labelHoverModel","markArea","markLineTransform","mlModel","baseIndex","mlFrom","mlTo","markLineFilter","updateSingleMarkerEndLayout","isFrom","markLineModel","mlData","fromData","__from","toData","__to","lineDrawMap","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","updateMarkerLayout","mpData","markPointModel","mpModel","symbolDrawMap","symbolDraw","dataOpt","VisualMapView","_getItemAlign","viewData","_getViewData","endsText","_renderEndsText","viewPieceList","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","onHoverLink","hoverLink","findTargetDataIndices","getPieceList","shapeParam","newKey","getSelectedMapKey","visualMapId","VisualMapModel","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","hasSel","pieceInterval","setStop","splitStep","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_handleEnds","_orient","_useHandle","_hoverLinkDataIndices","_hovering","_buildView","_resetInterval","_renderBar","dataRangeText","_updateView","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","barGroup","_applyTransform","shapes","_createBarGroup","createPolygon","getCursor","_dragHandle","textSize","handleThumbs","handleLabels","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicator","indicatorLabel","indicatorLabelPoint","_updateInterval","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","dataInterval","getSelected","sizeExtent","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","textPoint","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","hoverLinkDataSize","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","hoverLinkOnHandle","DEFAULT_BAR_BOUND","ContinuousModel","_resetRange","auto","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","cleanStore","coordId","onPan","newX","newY","wrapAndDispatch","panGetRange","onZoom","zoomGetRange","getRange","dataZoomInfos","disabled","dataZoomInfo","theDataZoomId","theCoordId","allCoordIds","newRecord","createController","typePriority","controllerParams","type_true","type_move","type_false","type_undefined","oneType","zoomLock","roamControllerOpt","containsPoint","throttleRate","generateCoordId","DataZoomView","roams","InsideZoomView","_range","coordInfoList","coordInfo","dataZoomOption","_onPan","_onZoom","lastRange","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","radiusExtent","angleExtent","pointToCoord","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_resetLocation","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","layoutParams","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","thisAxis","thisDim","displaybles","handles","filler","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","viewExtent","viewExtend","percentExtent","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","calculateDataWindow","valueWindow","_formatLabel","orderedHandleEnds","barTransform","labelPrecision","valueStr","showOrHide","changed","localPoint","dataBackground","fillerColor","handleIcon","handleStyle","showDetail","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","boundValue","boundPercent","targetSeries","seriesExtent","fixExtentByAxis","calculateDataExtent","dataWindow","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","calendarModel","rangeData","getRangeInfo","getOrient","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","getCellWidth","getCellHeight","getNextNDay","dataToRect","tl","firstDay","addPoints","formatedDate","getDateInfo","setMonth","getMonth","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","day","_formatterLabel","_yearTextPositionControl","aligns","yearLabel","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","vAlign","monthLabel","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","cellSize","isStart","dayLabel","firstDayOfWeek","getFirstDayOfWeek","lweek","fweek","weekText","CalendarModel","mergeAndNormalizeLayoutParams","raw","Calendar","_rangeInfo","_sw","_sh","_firstDayOfWeek","getFullYear","getDate","getDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","weeks","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","contentShape","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","rg","reversed","allDay","startDateNum","endDateNum","rangeInfo","nthDay","calendarList","calendar","calendarSeries","brushLang","Brush","_brushMode","isBrushed","brushModel","intervals","command","setAreas","updateController","modelId","brushId","$from","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushLink","throttleDelay","inBrush","outOfBrush","setBrushOption","getLineSelectors","selectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v3","v4","selector","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","doDispatch","brushSelected","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","bSelector","sel","brushIndex","thisBrushSelected","brushName","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","linkOthers","brushed","hasAxisBrushed","eachActiveState","activeState","stepAParallel","brushModelNotControll","stepAOthers","seriesBrushSelected","getBoundingRectFromMinMax","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","_mapDraw","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","scaleLimit","makeAction","PolarAxisPointer","coordValue","axisAngle","coordToPoint","getLabelPosition","axisBuilderAttrs","selfBuilderAttrs","layoutAxis","_splitLine","lineColors","lineCount","splitLines","colorIndex","_splitArea","areaStyleModel","areaColors","splitAreas","prevRadius","elementList","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","lastItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","commonLabelModel","labelTextAlign","labelTextVerticalAlign","RADIAN","prevAngle","PolarAxisModel","polarIndex","polarId","polarAxisDefaultExtendedOption","foundAxisModel","AngleAxis","dataToAngle","angleToData","RadiusAxis","dataToRadius","radiusToData","_radiusAxis","_angleAxis","axes","minAngle","maxAngle","calRadialBar","radiusSpan","angleSpan","barPolar","eventUtil","vendors","assembleCssText","transitionText","transitionDuration","vendorPrefix","borderName","camelCase","assembleFont","TooltipContent","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","dispatch","onmouseleave","hideLater","_hideDelay","setContent","setEnterable","enterable","viewportRootOffset","isShow","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","_manuallyAxisShowTip","pointInfo","manuallyHideTip","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","valueLabelOpt","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","contentSize","viewSize","domWidth","domHeight","calcTooltipPosition","gapH","gapV","getOuterSize","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","indexAxis","lastIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","scrollDataIndex","setScrollDataIndex","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","containerGroup","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageFormatter","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","ScrollableLegendModel","pageButtonItemGap","pageButtonPosition","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendFilter","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","mergeNewElOptionToExist","existItem","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","elOptionStyle","elOptionCleaned","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","elOptions","containerInfo","bounding","cellWidth","cellHeight","dayCount","dataToCoordSize","dataSize","halfSize","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","targetStyle","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","updateCache","styleEmphasis","barLayout","currentSeriesIndices","userParams","dataInsideLength","dataDimIndex","wrapEncodeDef","currDirty","doCreateOrUpdate","elOptionType","__customGraphicType","__customPathData","__customImagePath","__customText","targetProps","targetOpacity","updateEl","oldChildren","newChildren","diffChildrenByName","processAddUpdate","processRemove","childOption","setIncrementalAndHoverLayer","virtualRoot","treeRoot","getViewRoot","rootDepth","initChildren","isAsc","sortOrder","validDataCount","unitRadian","renderRollupNode","rPerLevel","stillShowZeroSum","renderNode","rStart","rEnd","siblingAngle","ROOT_TO_NODE_ACTION","originViewRoot","resetViewRoot","HIGHLIGHT_ACTION","unhighlight","NodeHighlightPolicy","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPiece","sector","hoverIgnore","normalIgnore","SunburstPieceProto","firstCreate","sectorShape","getRootId","getNodeColor","stateStyle","_updateLabel","highlightPolicy","activeNode","policy","onHighlight","onDownplay","getLabelAttr","labelMinAngle","midAngle","labelPosition","labelPadding","rotateType","stateAttr","newRoot","renderLabelForZeroData","_oldChildren","processNode","newId","oldId","newNode","oldNode","removeNode","doRenderNode","dualTravel","virtualPiece","_onclickEvent","_rootToNode","renderRollUp","targetFound","nodeClick","linkTarget","_viewRoot","completeTreeValue","childValue","thisValue","treeOption","percentPrecision","animationType","dataColor","sunburstLayout","colorList","themeRiverLayout","baseY0","layerSeries","getLayerSeries","timeDim","layerPoints","singleLayer","layerNum","pointNum","sums","temp","computeBaseline","baseLine","ky","layerIndex","_layers","keyGetter","newLayersGroups","process","oldLayersGroups","points0","points1","layerGroup","rectEl","createGridClipShape","_layersSeries","nest","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","singleAxisHelper","SingleAxisPointer","getPointDimIndex","AxisPointerView","shadowStyle","modelHelper","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","SingleAxisView","selfBuilderAttr","splitLineModel","getLineDash","SingleAxis","Single","_init","_adjustAxis","_updateAxisTransform","extentSum","singles","themeRiverVisual","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolMeta","symbolRepeatDirection","output","boundingLength","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","prepareLineWidth","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","updateBar","PictorialBarSeries","visualSymbol","Heatmap","blurSize","pointSize","maxOpacity","minOpacity","_gradientPixels","colorFunc","isInRange","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","clearRect","gradientPixels","pixelsSingleState","Uint8ClampedArray","HeatmapLayer","visualMapOfThisSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","dataSpan","getIsInContinuousRange","getIsInPiecewiseRange","opacityQuery","lineContain","quadraticContain","LargeLineShape","polyline","segs","findDataIndex","LargeLineDraw","largeLineProto","lineEl","_setCommon","__startIndex","isIncremental","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","linesLayout","_updateLineDraw","isSvg","getLayer","_lastZlevel","motionBlur","_showEffect","lastFrameAlpha","_finished","_clearLayer","_lineDraw","hasEffect","isLargeDraw","_hasEffet","_isPolyline","_isLargeDraw","Uint32Arr","Float64Arr","compatEc2","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","progressiveThreshold","linesVisual","updateRipplePath","rippleGroup","effectCfg","ripplePath","EffectSymbol","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","normalizeSymbolSize","showEffectOn","pointsLayout","_symbolDraw","effectSymbolDraw","_updateGroupTransform","effectType","layoutPoints","candleWidth","barMinWidth","calculateCandleWidth","cDimIdx","vDimIdx","cDim","vDims","openDim","closeDim","lowestDim","highestDim","isSimpleBox","axisDimVal","openVal","closeVal","lowestVal","highestVal","getSign","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","addBodyEnd","subPixelOptimizePoint","initBaseline","brushRect","makeBrushRect","point1","point2","pmin","pmax","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","seriesItem","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","SKIP_PROPS","CandlestickView","_updateDrawMode","_renderLarge","_renderNormal","_incrementalRenderLarge","_incrementalRenderNormal","createNormalBox","setBoxCommon","createLarge","NormalBoxPath","__simpleBox","transInit","normalItemStyleModel","LargeBoxPath","__sign","elP","elN","setLargeStyle","suffix","CandlestickSeries","color0","borderColor0","animationUpdate","candlestickVisual","candlestickLayout","groupResult","axisList","groupSeriesByAxis","groupItem","seriesCount","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","boxWidth","calculateBase","halfWidth","median","end1","end2","end4","end5","layEndLine","endCenter","layoutSingleSeries","borderColorQuery","globalColors","defaulColor","BoxplotView","constDim","updateNormalBoxData","BoxPath","BoxplotSeries","boxplotVisual","boxplotLayout","minValue","nodeValue","mapValueToColor","customColor","resolveCollisions","nodesByBreadth","nodeGap","ascendingDepth","nodeY","relaxRightToLeft","outEdges","weightedTarget","getEdgeValue","relaxLeftToRight","inEdges","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","nodeWidth","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextNode","indexEdge","nodeIndex","moveSinksRight","kx","scaleNodeBreadths","computeNodeBreadths","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","setNodePosition","localX","localY","SankeyShape","cpx2","cpy2","halfExtent","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","dragX","dragY","createGraphFromNodeEdge","SankeySeries","links","localPosition","getEdgeData","rawDataOpt","layoutIterations","sankeyLayout","sankeyVisual","opacityAccessPath","inactiveOpacity","activeOpacity","opacityMap","itemOpacity","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","updateElCommon","_dataGroup","_initialized","newDataIndex","oldDataIndex","setEncodeAndDimensions","getRawIndicesByActiveState","theActiveState","parallelIndex","fromAxisAreaSelect","oldAxisGroup","_axisGroup","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","_refreshBrushController","extentLen","activeIntervals","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","parallelAxisModel","setActiveIntervals","setAxisExpand","makeStyleMapper","getActiveState","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","_initDimensions","parallelAxis","ParallelAxis","mathFloor","mathCeil","_axesLayout","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","posInfo","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","pointCoord","triggerArea","useJump","hasParallelSeries","createParallelIfNeeded","axisOption","parallelOption","mergeAxisOptionFromParallel","parallelVisual","valueArr","isAscending","getSortedIndices","funnelAlign","getLinePoints","offY","labelLineModel","isLabelInside","labelLineLen","FunnelPiece","labelLine","funnelPieceProto","labelText","labelLineHoverModel","funnelPiece","piePiece","FunnelSeries","_defaultLabelLine","labelLineNormalOpt","labelLineEmphasisOpt","minSize","funnelLayout","PointerPath","formatLabel","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","detailModel","positions","bbWidth","bbHeight","viewCoordSys","forceLayout","gravity","pp","friction","warmUp","setFixed","setUnfixed","v12","nLen","n1","n2","repFact","rep","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","getEdgeByIndex","forceInstance","oldStep","getNodeByIndex","stopped","_simpleLayoutHelper","colorQuery","categoriesData","getCategoriesData","categoryNameIdxMap","categoryNames","curveTool","intersectCurveCircle","curvePoints","radiusSquare","nextDiff","tmp0","pts2","__original","originalPoints","straightLineProto","bezierCurveProto","isLine","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","fadeInItem","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","layoutAnimation","_startForceLayoutIteration","_layouting","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","isLeft","focusNodeAdjacency","adjacentEdge","unfocusNodeAdjacency","nodeScale","nodeScaleRatio","groupScale","groupZoom","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","sourceName","targetName","circular","rotateLabel","edgeSymbol","edgeSymbolSize","edgeLabel","categoryFilter","categoryVisual","edgeVisual","createView","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","rootRect","viewAbovePath","rootSize","currNode","defaultSize","viewArea","zoomToNodeRatio","currNodeValue","upperHeight","getUpperLabelHeight","estimateRootSize","squareRatio","leafDepth","viewRootLayout","squarify","hideChildren","thisLayout","nodeModel","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","visibleMin","deletePoint","filterByThreshold","isLeafRoot","rowFixedLength","best","score","worst","childrenVisibleMin","defaultPosition","targetCenter","nodeLayout","calculateRootPosition","setLayoutInfo","prunning","clipRect","nodeInViewAbovePath","isAboveViewRoot","isInView","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeItemStyleModel","levelItemStyle","visualName","buildVisuals","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","mapIdToIndex","getValueVisualDefine","actionTypes","createWrap","doneCallback","elExistsMap","ARRAY_LENGTH","Breadcrumb","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","nodeGroup","_oldTree","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","animationWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_clearController","rootLayout","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","updateStyle","upperLabelWidth","prepareText","renderContent","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","lasts","prepareAnimationWhenHasOld","zInLevel","zb","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","hoverLayerThreshold","clipWindow","drillDownIcon","breadcrumb","upperLabel","gapWidth","visualDimension","hasColorDefine","globalColorList","modelColor","level0","setDefault","idIndexMap","_idIndexMap","_idIndexMapCount","treemapVisual","treemapLayout","eachAfter","eachBefore","_traversalHelper","_layoutHelper","sep","realRoot","coorX","coorY","finalCoor","rawX","rawY","commonLayout","expandAndCollapse","updateNode","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","__radialOldRawX","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","treeDepth","expandTreeDepth","initialTreeDepth","collapsed","treeLayout","mapLocation","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","needsDrawMap","mainSeries","processedMapType","mapSymbolOffsets","subMapSeries","getRegion","mapModel","_renderSymbols","fullData","fullIndex","polygonGroups","__mapOriginalZ2","Russia","United States","United States of America","coordsOffsetMap","南海诸岛","广东","香港","澳门","coordFix","geoFixFuncs","_nameCoordMap","loadGeoJson","containCoord","regionsMap","regionName","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","dataSelectableMixin","MapSeries","_createSelectableList","_fillOption","seriesNames","otherIndex","showLegendSymbol","dataRangeHoverLink","mapSymbolLayout","mapDataStatistic","createDataSelectAction","polarOptArr","polarNotRadar","polarOpt","radarIndex","getIndicatorAxes","pointsConverter","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","RadarSeries","indicatorAxes","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","splitAreaModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","getIndicatorModels","IndicatorAxis","Radar","_indicatorAxes","indicatorModel","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","radarSeries","increaseInterval","fixedMin","fixedMax","halfSplitNumber","radarList","radarLayout","LargeSymbolPath","symbolProxy","symbolProxyShape","fillRect","LargeSymbolDraw","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_updateSymbolDraw","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelLineLen2","leftList","rightList","avoidOverlap","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","PiePiece","piePieceProto","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","_createClipPath","PieSeries","hoverOffset","avoidLabelOverlap","pieLayout","getBarItemStyle","getBorderLineDash","barItemStyle","coordinateSystemType","isHorizontalOrRadial","elementCreator","removeRect","removeSector","animateProperty","animateTarget","isRadial","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","CartesianAxisView","_splitAreaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","containLabel","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","samplers","nearest","indexSampler","sampling","sampler","_helper","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","idx1","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","lineAnimationDiff","_poly","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","forSymbol","createPolarClipShape","xExtent","yExtent","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","getIsIgnoreFunc","showAllSymbol","isAuto","availSize","dataLen","canShowAllSymbolForCategory","categoryDataDim","labelMap","lineGroup","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","getStackedOnPoints","showSymbol","isIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","getVisualGradient","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","clipOverflow","dataSample","_echarts","_export","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","msg","error","childNum","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","listCacheSet","makeLabelsByCustomizedCategoryInterval","makeLabelsByNumericCategoryInterval","autoInterval","makeAutoCategoryInterval","labelCategoryInterval","cache","categoryInterval","onlyTick","ordinalScale","ordinalExtent","startTick","showMinMax","addItem","tVal","makeCategoryLabels","makeRealNumberLabels","ticksCache","optionTickInterval","labelsResult","makeCategoryTicks","axisRotate","fetchAutoCategoryIntervalCalculationParams","unitSpan","unitW","unitH","maxW","maxH","lastAutoInterval","lastTickCount","scaleProto","intervalScaleProto","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","approxTickNum","originalVal","scaleHelper","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","bisect","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","_ordinalMeta","rank","_dataStackHelper","_completeDimensions","_createDimensions","_symbol","createScale","mixinAxisModelCommonMethods","colorAll","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","taskRecord","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","blockIndex","threshold","pipelineMap","stageTaskMap","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createSeriesStageTask","overallTaskReset","overallProgress","createStub","stubReset","stubOnDirty","agent","__block","createOverallStageTask","upstreamContext","stubProgress","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","legacyFunc","ecModelMock","apiMock","detectSeriseType","mockMethods","cond","maskColor","mask","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","userConfig","colorAccessPath","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","stackInfo","stackInfoMap","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","toArr","toObj","isTheme","processSeries","parallelOpt","calendarOpt","radarOpt","geoOpt","regionObj","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","dataRange","componentName","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","oldOption","oldOptionBackup","newParsedOption","mediaDefault","timelineOptions","mediaList","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","indices1","indices2","platform","gradientColor","lineType","_updatePathDirty","_curve","someVectorAt","isTangent","polyHelper","v2Min","v2Max","v2Scale","v2Distance","v2Add","v2Clone","v2Sub","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","w2","w3","mathAtan2","cubic","quadratic","windingCubic","nRoots","y0_","y1_","nExtrema","windingQuadratic","y_","windingArc","containPath","isStroke","transformPath","cc","vMag","vRatio","u","vAngle","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathOptions","pathProxy","cs","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathProxyFromString","pathEls","pathList","pathBundle","PATH_COLOR","dotSize","dashSize","GestureMgr","pointPair","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinchEnd","pinchPre","pinchCenter","_event","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","dispatchToElement","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mouseout","toElement","relatedTarget","touchstart","_lastTouchMoment","touchmove","touchend","click","isPointerFromTouch","pointerType","HandlerDomProxy","mountHandlers","handlerNames","makeMouseHandler","handlerDomProxyProto","setCursor","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","clearColor","__used","__drawIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","singleCanvas","nodeName","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layerConfig","_needsManuallyCompositing","mainLayer","__builtin__","_domRoot","domRoot","createRoot","_hoverlayer","_hoverElements","isSingleCanvas","paintAll","_redrawId","layer","_backgroundColor","__hoverMir","elMirror","hoverElements","hoverLayer","displayableSortFunc","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","prevElClipPaths","currentLayer","forcePaint","isDisplayableCulled","prevClipPaths","isClipPathChanged","doClip","insertLayer","layersMap","prevLayer","isLayerValid","prevDom","eachLayer","eachOtherLayer","getLayers","updatePrevLayer","incrementalLayerCount","layerConfig","_zlevel","delLayer","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","displayList","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","imgShape","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","easingFuncs","_life","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","Draggable","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","SILENT","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eveType","makeEventPacket","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","eval"],"mappings":"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","file":"js/2.c240b.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport Title from '../../components/title'\r\nimport Footer from '../../components/footer'\r\nimport \"echarts/map/js/china.js\";\r\nimport './style.less'\r\n\r\nconst geoCoordMap = {\r\n  '上海': [121.4648, 31.2891],\r\n  '东莞': [113.8953, 22.901],\r\n  '东营': [118.7073, 37.5513],\r\n  '中山': [113.4229, 22.478],\r\n  '临汾': [111.4783, 36.1615],\r\n  '临沂': [118.3118, 35.2936],\r\n  '丹东': [124.541, 40.4242],\r\n  '丽水': [119.5642, 28.1854],\r\n  '乌鲁木齐': [87.9236, 43.5883],\r\n  '佛山': [112.8955, 23.1097],\r\n  '保定': [115.0488, 39.0948],\r\n  '兰州': [103.5901, 36.3043],\r\n  '包头': [110.3467, 41.4899],\r\n  '北京': [116.4551, 40.2539],\r\n  '北海': [109.314, 21.6211],\r\n  '南京': [118.8062, 31.9208],\r\n  '南宁': [108.479, 23.1152],\r\n  '南昌': [116.0046, 28.6633],\r\n  '南通': [121.1023, 32.1625],\r\n  '厦门': [118.1689, 24.6478],\r\n  '台州': [121.1353, 28.6688],\r\n  '合肥': [117.29, 32.0581],\r\n  '呼和浩特': [111.4124, 40.4901],\r\n  '咸阳': [108.4131, 34.8706],\r\n  '哈尔滨': [127.9688, 45.368],\r\n  '唐山': [118.4766, 39.6826],\r\n  '嘉兴': [120.9155, 30.6354],\r\n  '大同': [113.7854, 39.8035],\r\n  '大连': [122.2229, 39.4409],\r\n  '天津': [117.4219, 39.4189],\r\n  '太原': [112.3352, 37.9413],\r\n  '威海': [121.9482, 37.1393],\r\n  '宁波': [121.5967, 29.6466],\r\n  '宝鸡': [107.1826, 34.3433],\r\n  '宿迁': [118.5535, 33.7775],\r\n  '常州': [119.4543, 31.5582],\r\n  '广州': [113.5107, 23.2196],\r\n  '廊坊': [116.521, 39.0509],\r\n  '延安': [109.1052, 36.4252],\r\n  '张家口': [115.1477, 40.8527],\r\n  '徐州': [117.5208, 34.3268],\r\n  '德州': [116.6858, 37.2107],\r\n  '惠州': [114.6204, 23.1647],\r\n  '成都': [103.9526, 30.7617],\r\n  '扬州': [119.4653, 32.8162],\r\n  '承德': [117.5757, 41.4075],\r\n  '拉萨': [91.1865, 30.1465],\r\n  '无锡': [120.3442, 31.5527],\r\n  '日照': [119.2786, 35.5023],\r\n  '昆明': [102.9199, 25.4663],\r\n  '杭州': [119.5313, 29.8773],\r\n  '枣庄': [117.323, 34.8926],\r\n  '柳州': [109.3799, 24.9774],\r\n  '株洲': [113.5327, 27.0319],\r\n  '武汉': [114.3896, 30.6628],\r\n  '汕头': [116.1415, 23.0201],\r\n  '江门': [112.6318, 22.1484],\r\n  '沈阳': [123.1238, 42.1216],\r\n  '沧州': [116.8286, 38.2104],\r\n  '河源': [114.917, 23.9722],\r\n  '泉州': [118.3228, 25.1147],\r\n  '泰安': [117.0264, 36.0516],\r\n  '泰州': [120.0586, 32.5525],\r\n  '济南': [117.1582, 36.8701],\r\n  '济宁': [116.8286, 35.3375],\r\n  '海口': [110.3893, 19.8516],\r\n  '淄博': [118.0371, 36.6064],\r\n  '淮安': [118.927, 33.4039],\r\n  '深圳': [114.5435, 22.5439],\r\n  '清远': [112.9175, 24.3292],\r\n  '温州': [120.498, 27.8119],\r\n  '渭南': [109.7864, 35.0299],\r\n  '湖州': [119.8608, 30.7782],\r\n  '湘潭': [112.5439, 27.7075],\r\n  '滨州': [117.8174, 37.4963],\r\n  '潍坊': [119.0918, 36.524],\r\n  '烟台': [120.7397, 37.5128],\r\n  '玉溪': [101.9312, 23.8898],\r\n  '珠海': [113.7305, 22.1155],\r\n  '盐城': [120.2234, 33.5577],\r\n  '盘锦': [121.9482, 41.0449],\r\n  '石家庄': [114.4995, 38.1006],\r\n  '福州': [119.4543, 25.9222],\r\n  '秦皇岛': [119.2126, 40.0232],\r\n  '绍兴': [120.564, 29.7565],\r\n  '聊城': [115.9167, 36.4032],\r\n  '肇庆': [112.1265, 23.5822],\r\n  '舟山': [122.2559, 30.2234],\r\n  '苏州': [120.6519, 31.3989],\r\n  '莱芜': [117.6526, 36.2714],\r\n  '菏泽': [115.6201, 35.2057],\r\n  '营口': [122.4316, 40.4297],\r\n  '葫芦岛': [120.1575, 40.578],\r\n  '衡水': [115.8838, 37.7161],\r\n  '衢州': [118.6853, 28.8666],\r\n  '西宁': [101.4038, 36.8207],\r\n  '西安': [109.1162, 34.2004],\r\n  '贵阳': [106.6992, 26.7682],\r\n  '连云港': [119.1248, 34.552],\r\n  '邢台': [114.8071, 37.2821],\r\n  '邯郸': [114.4775, 36.535],\r\n  '郑州': [113.4668, 34.6234],\r\n  '鄂尔多斯': [108.9734, 39.2487],\r\n  '重庆': [107.7539, 30.1904],\r\n  '金华': [120.0037, 29.1028],\r\n  '铜川': [109.0393, 35.1947],\r\n  '银川': [106.3586, 38.1775],\r\n  '镇江': [119.4763, 31.9702],\r\n  '长春': [125.8154, 44.2584],\r\n  '长沙': [113.0823, 28.2568],\r\n  '长治': [112.8625, 36.4746],\r\n  '阳泉': [113.4778, 38.0951],\r\n  '青岛': [120.4651, 36.3373],\r\n  '韶关': [113.7964, 24.7028],\r\n  '峨眉': [103.2910, 29.3600],\r\n  '潮州': [116.3833, 23.4022],\r\n};\r\nclass Journey extends React.Component {\r\n  componentDidMount() {\r\n\r\n    let myChart = echarts.init(document.getElementById('main'));\r\n\r\n\r\n    let CZData = [\r\n      [{ name: '潮州' }, { name: '杭州', value: 95 }],\r\n      [{ name: '潮州' }, { name: '广州', value: 95 }],\r\n      [{ name: '潮州' }, { name: '深圳', value: 95 }],\r\n      [{ name: '潮州' }, { name: '汕头', value: 95 }],\r\n    ];\r\n\r\n    let HZData = [\r\n      [{ name: '杭州' }, { name: '上海', value: 95 }],\r\n      [{ name: '杭州' }, { name: '广州', value: 90 }],\r\n    ];\r\n    let CDData = [\r\n      [{ name: '成都' }, { name: '广州', value: 95 }],\r\n      [{ name: '成都' }, { name: '峨眉', value: 90 }],\r\n    ];\r\n    var GZData = [\r\n      [{ name: '广州' }, { name: '长沙', value: 95 }],\r\n      [{ name: '广州' }, { name: '杭州', value: 90 }],\r\n      [{ name: '广州' }, { name: '北京', value: 80 }],\r\n      [{ name: '广州' }, { name: '成都', value: 80 }],\r\n      [{ name: '广州' }, { name: '潮州', value: 80 }],\r\n      [{ name: '广州' }, { name: '深圳', value: 80 }],\r\n      [{ name: '广州' }, { name: '清远', value: 80 }],\r\n    ];\r\n\r\n    var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';\r\n\r\n    var convertData = function (data) {\r\n      var res = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        var dataItem = data[i];\r\n        var fromCoord = geoCoordMap[dataItem[0].name];\r\n        var toCoord = geoCoordMap[dataItem[1].name];\r\n        if (fromCoord && toCoord) {\r\n          res.push({\r\n            fromName: dataItem[0].name,\r\n            toName: dataItem[1].name,\r\n            coords: [fromCoord, toCoord]\r\n          });\r\n        }\r\n      }\r\n      return res;\r\n    };\r\n\r\n    var color = ['#a6c84c', '#ffa022', '#46bee9'];\r\n    var series = [];\r\n\r\n    [['潮州', CZData], ['杭州', HZData], ['广州', GZData], ['成都', CDData]].forEach(function (item, i) {\r\n      series.push({\r\n        name: ' journey',  //建立legend的标识,一致则不分类展示\r\n        type: 'lines',\r\n        zlevel: 1,\r\n        effect: {\r\n          show: true,\r\n          period: 6,\r\n          trailLength: 0.7,\r\n          color: '#fff',\r\n          symbolSize: 3\r\n        },\r\n        lineStyle: {\r\n          normal: {\r\n            color: color[i],\r\n            width: 0,\r\n            curveness: 0.2\r\n          }\r\n        },\r\n        data: convertData(item[1])\r\n      },\r\n        {\r\n          name: ' journey',\r\n          type: 'lines',\r\n          zlevel: 2,\r\n          symbol: ['none', 'arrow'],\r\n          symbolSize: 10,\r\n          effect: {\r\n            show: true,\r\n            period: 6,\r\n            trailLength: 0,\r\n            symbol: planePath,\r\n            symbolSize: 15\r\n          },\r\n          lineStyle: {\r\n            normal: {\r\n              color: color[i],\r\n              width: 1,\r\n              opacity: 0.6,\r\n              curveness: 0.2\r\n            }\r\n          },\r\n          data: convertData(item[1])\r\n        },\r\n        {\r\n          name: ' journey',\r\n          type: 'effectScatter',\r\n          coordinateSystem: 'geo',\r\n          zlevel: 2,\r\n          rippleEffect: {\r\n            brushType: 'stroke'\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'right',\r\n              formatter: '{b}'\r\n            }\r\n          },\r\n          symbolSize: function (val) {\r\n            return val[2] / 8;\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: color[i]\r\n            }\r\n          },\r\n          data: item[1].map(function (dataItem) {\r\n            return {\r\n              name: dataItem[1].name,\r\n              value: geoCoordMap[dataItem[1].name].concat([dataItem[1].value])\r\n            };\r\n          })\r\n        });\r\n    });\r\n    console.log(series);\r\n    let option = {\r\n      backgroundColor: '#404a59',\r\n      title: {\r\n        text: 'My journey',\r\n        subtext: 'Up to 2018',\r\n        left: 'center',\r\n        textStyle: {\r\n          color: '#fff'\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'item'\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        top: 'bottom',\r\n        left: 'right',\r\n        data: ['北京 Top10', '上海 Top10', '广州 Top10'],\r\n        textStyle: {\r\n          color: '#fff'\r\n        },\r\n        selectedMode: 'single'\r\n      },\r\n      geo: {\r\n        map: 'china',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          }\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: '#323c48',\r\n            borderColor: '#404a59'\r\n          },\r\n          emphasis: {\r\n            areaColor: '#2a333d'\r\n          }\r\n        }\r\n      },\r\n      series: series\r\n    };\r\n    myChart.setOption(option);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title />\r\n        <div id=\"main\" className=\"journey\" style={{ 'position': 'fixed' }}></div>\r\n        <Footer index={false} text={'journey'} position='fixed'/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Journey;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".footer {\\n  width: 100%;\\n  height: 50px;\\n  bottom: 0;\\n  text-align: center;\\n  color: white;\\n  font-size: 1.1em;\\n}\\n.text-blue {\\n  display: inline-block;\\n  color: #4169E1;\\n}\\n.clickMe {\\n  cursor: pointer;\\n}\\n.clickMe a {\\n  color: white;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n  width: 400px;\\n  height: 300px;\\n  position: fixed;\\n  right: 0px;\\n  top: -172px;\\n  z-index: 100;\\n  /* Rotate */\\n  -webkit-transform: rotate(45deg);\\n  -moz-transform: rotate(45deg);\\n  -ms-transform: rotate(45deg);\\n  -o-transform: rotate(45deg);\\n  transform: rotate(45deg);\\n  /* Rotate Origin */\\n  -webkit-transform-origin: 0 100%;\\n  -moz-transform-origin: 0 100%;\\n  -ms-transform-origin: 0 100%;\\n  -o-transform-origin: 0 100%;\\n  transform-origin: 0 100%;\\n}\\n.title h1 {\\n  width: 100%;\\n  text-align: center;\\n  color: white;\\n  font-size: 4.35em;\\n  margin-bottom: 10px;\\n}\\n@media screen and (max-width: 1024px) {\\n  .title h1 {\\n    font-size: 2.45em;\\n  }\\n  .title h2 {\\n    font-size: 1.25em;\\n  }\\n}\\n.title h2 {\\n  width: 100%;\\n  text-align: center;\\n  color: #E0EEE0;\\n  font-size: 1.35em;\\n  font-weight: 100;\\n}\\n@media screen and (max-width: 540px) {\\n  .title {\\n    width: 290px;\\n    height: 170px;\\n    right: -44px;\\n    top: -131px;\\n  }\\n}\\n\", \"\"]);\n\n// exports\n","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\r\nimport './style.less';\r\n\r\nclass Footer extends React.Component {\r\n    clickHandle() {\r\n\r\n    }\r\n    render() {\r\n        const { index, text , position} = this.props;\r\n        console.log(position)\r\n        return (\r\n            <div className=\"footer\" style={{ \"position\": position }}>\r\n                {\r\n                    index ? <div className=\"clickMe\" onClick={this.clickHandle}><a href=\"https://github.com/szmscau\">@Me.</a></div> :\r\n                        <div >Build <div className=\"text-blue\"> {text} </div> by <div className=\"text-blue\"> Lighing </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react'\r\nimport './style.less'\r\n\r\nclass Title extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className='title'>\r\n            <h1>lighing</h1>\r\n            <h2>一只想吃鱼的猪^(*￣(oo)￣)^</h2>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  margin: 0;\\n}\\n.journey {\\n  width: 100%;\\n  height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar matrix = require(\"../core/matrix\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    if (typeof val === 'string' && val.indexOf('NaN') > -1) {\n      console.log(val);\n    }\n\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation || 0;\n    var transform = matrix.create(); // Apply textRotate to element matrix\n\n    matrix.rotate(transform, el.transform, rotate);\n    setTransform(textSvgEl, transform);\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 5e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n * \n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    zrUtil.each(zeroIndegrees, function (node) {\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n      zrUtil.each(node.outEdges, function (edge) {\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      });\n    });\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // If the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n      var y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n      var y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    var draggable = seriesModel.get('draggable');\n\n    if (draggable) {\n      nodeData.eachItemGraphicEl(function (el, dataIndex) {\n        el.drift = function (dx, dy) {\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      });\n    }\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n}(this, function (exports, echarts) {\n    var log = function (msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    }\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n    if (!echarts.registerMap) {\n        log('ECharts Map is not loaded')\n        return;\n    }\n    echarts.registerMap('china', {\"type\":\"FeatureCollection\",\"features\":[{\"id\":\"710000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@°Ü¯Û\"],[\"@@ƛĴÕƊÉɼģºðʀ\\\\ƎsÆNŌÔĚänÜƤɊĂǀĆĴĤǊŨxĚĮǂƺòƌâÔ®ĮXŦţƸZûÐƕƑGđ¨ĭMó·ęcëƝɉlÝƯֹÅŃ^Ó·śŃǋƏďíåɛGɉ¿@ăƑ¥ĘWǬÏĶŁâ\"],[\"@@\\\\p|WoYG¿¥Ij@¢\"],[\"@@¡@V^RqBbAnTXeRz¤L«³I\"],[\"@@ÆEEkWqë @\"],[\"@@fced\"]],\"encodeOffsets\":[[[122886,24033]],[[123335,22980]],[[122375,24193]],[[122518,24117]],[[124427,22618]],[[124862,26043]]]},\"properties\":{\"cp\":[121.509062,25.044332],\"name\":\"台湾\",\"childNum\":6}},{\"id\":\"130000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@o~Z]ªrºc_ħ²G¼s`jÎŸnüsÂłNX_M`Ç½ÓnUKĜēs¤­©yrý§uģcJe\"],[\"@@U`Ts¿mÂ\"],[\"@@oºƋÄdeVDJj£J|ÅdzÂFt~KŨ¸IÆv|¢r}èonb}`RÎÄn°ÒdÞ²^®lnÐèĄlðÓ×]ªÆ}LiĂ±Ö`^°Ç¶p®đDcŋ`ZÔ¶êqvFÆN®ĆTH®¦O¾IbÐã´BĐɢŴÆíȦpĐÞXR·nndO¤OÀĈƒ­QgµFo|gȒęSWb©osx|hYhgŃfmÖĩnºTÌSp¢dYĤ¶UĈjlǐpäìë|³kÛfw²Xjz~ÂqbTÑěŨ@|oMzv¢ZrÃVw¬ŧĖ¸f°ÐTªqs{S¯r æÝlNd®²Ğ ǆiGĘJ¼lr}~K¨ŸƐÌWöÆzR¤lêmĞLÎ@¡|q]SvKÑcwpÏÏĿćènĪWlĄkT}J¤~ÈTdpddʾĬBVtEÀ¢ôPĎƗè@~kü\\\\rÊĔÖæW_§¼F´©òDòjYÈrbĞāøŀG{ƀ|¦ðrb|ÀH`pʞkvGpuARhÞÆǶgĘTǼƹS£¨¡ù³ŘÍ]¿ÂyôEP xX¶¹ÜO¡gÚ¡IwÃé¦ÅBÏ|Ç°N«úmH¯âDùyŜŲIÄuĐ¨D¸dɂFOhđ©OiÃ`ww^ÌkÑH«ƇǤŗĺtFu{Z}Ö@U´ʚLg®¯Oı°Ãw ^VbÉsmAê]]w§RRl£ȭµu¯b{ÍDěïÿȧuT£ġěŗƃĝQ¨fVƋƅn­a@³@ďyÃ½IĹÊKŭfċŰóxV@tƯJ]eR¾fe|rHA|h~Ėƍl§ÏlTíb ØoÅbbx³^zÃĶ¶Sj®AyÂhðk`«PËµEFÛ¬Y¨Ļrõqi¼Wi°§Ð±´°^[À|ĠO@ÆxO\\\\ta\\\\tĕtû{ġȧXýĪÓjùÎRb^ÎfK[ÝděYfíÙTyuUSyŌŏů@Oi½éŅ­aVcř§ax¹XŻácWU£ôãºQ¨÷Ñws¥qEHÙ|šYQoŕÇyáĂ£MÃ°oťÊP¡mWO¡v{ôvîēÜISpÌhp¨ jdeŔQÖjX³àĈ[n`Yp@UcM`RKhEbpŞlNut®EtqnsÁgAiúoHqCXhfgu~ÏWP½¢G^}¯ÅīGCÑ^ãziMáļMTÃƘrMc|O_¯Ŏ´|morDkO\\\\mĆJfl@cĢ¬¢aĦtRıÒ¾ùƀ^juųœK­UFyƝīÛ÷ąV×qƥV¿aȉd³BqPBmaËđŻģmÅ®V¹d^KKonYg¯XhqaLdu¥Ípǅ¡KąÅkĝęěhq}HyÃ]¹ǧ£Í÷¿qáµ§g¤o^á¾ZE¤i`ĳ{nOl»WÝĔįhgF[¿¡ßkOüš_ūiǱàUtėGyl}ÓM}jpEC~¡FtoQiHkk{Ãmï\"]],\"encodeOffsets\":[[[119712,40641]],[[121616,39981]],[[116462,37237]]]},\"properties\":{\"cp\":[114.502461,38.045474],\"name\":\"河北\",\"childNum\":3}},{\"id\":\"140000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÞĩÒSra}ÁyWix±Üe´lèßÓǏokćiµVZģ¡coTSË¹ĪmnÕńehZg{gtwªpXaĚThȑp{¶Eh®RćƑP¿£Pmc¸mQÝWďȥoÅîɡųAďä³aÏJ½¥PG­ąSM­EÅruµéYÓŌ_dĒCo­Èµ]¯_²ÕjāK~©ÅØ^ÔkïçămÏk]­±cÝ¯ÑÃmQÍ~_apm~ç¡qu{JÅŧ·Ls}EyÁÆcI{¤IiCfUcƌÃp§]ě«vD@¡SÀµMÅwuYY¡DbÑc¡h×]nkoQdaMç~eDÛtT©±@¥ù@É¡ZcW|WqOJmĩl«ħşvOÓ«IqăV¥D[mI~Ó¢cehiÍ]Ɠ~ĥqX·eƷn±}v[ěďŕ]_œ`¹§ÕōIo©b­s^}Ét±ū«³p£ÿ·Wµ|¡¥ăFÏs×¥ŅxÊdÒ{ºvĴÎêÌɊ²¶ü¨|ÞƸµȲLLúÉƎ¤ϊęĔV`_bªS^|dzY|dz¥pZbÆ£¶ÒK}tĦÔņƠPYznÍvX¶Ěn ĠÔzý¦ª÷ÑĸÙUȌ¸dòÜJð´ìúNM¬XZ´¤ŊǸ_tldI{¦ƀðĠȤ¥NehXnYGR° ƬDj¬¸|CĞKqºfƐiĺ©ª~ĆOQª ¤@ìǦɌ²æBÊTŸʂōĖĴŞȀÆÿȄlŤĒötÎ½î¼ĨXh|ªM¤Ðz\"],\"encodeOffsets\":[[116874,41716]]},\"properties\":{\"cp\":[112.549248,37.857014],\"name\":\"山西\",\"childNum\":1}},{\"id\":\"150000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Č^â£ĂhĖMÈÄw\\\\fŦ°W ¢¾luŸDw\\\\̀ʉÌÛMĀ[bÓEn}¶Vcês¯PqFB|S³C|kñHdiÄ¥sŉÅPóÑÑE^ÅPpy_YtShQ·aHwsOnŉÃs©iqjUSiº]ïW«gW¡ARëśĳĘů`çõh]y»ǃǛҤxÒm~zf}pf|ÜroÈzrKÈĵSƧż؜Ġu¦ö\"],[\"@@sKCGS|úþXgp{ÁX¿ć{ƱȏñZáĔyoÁhA}ŅĆfdŉ_¹Y°ėǩÑ¡H¯¶oMQqð¡Ë|Ñ`ƭŁX½·óÛxğįÅcQs«tȋǅFù^it«Č¯[hAi©á¥ÇĚ×l|¹y¯YȵƓñǙµïċĻ|Düȭ¶¡oŽäÕG\\\\ÄT¿Òõr¯LguÏYęRƩɷŌO\\\\İÐ¢æ^Ŋ ĲȶȆbÜGĝ¬¿ĚVĎgª^íu½jÿĕęjık@Ľ]ėl¥ËĭûÁėéV©±ćn©­ȇÍq¯½YÃÔŉÉNÑÅÝy¹NqáʅDǡËñ­ƁYÅy̱os§ȋµʽǘǏƬɱàưN¢ƔÊuľýľώȪƺɂļxZĈ}ÌŉŪĺœĭFЛĽ̅ȣͽÒŵìƩÇϋÿȮǡŏçƑůĕ~Ç¼ȳÐUfdIxÿ\\\\G zâɏÙOº·pqy£@qþ@Ǟ˽IBäƣzsÂZÁàĻdñ°ŕzéØűzșCìDȐĴĺf®Àľưø@ɜÖÞKĊŇƄ§͑těï͡VAġÑÑ»d³öǍÝXĉĕÖ{þĉu¸ËʅğU̎éhɹƆ̗̮ȘǊ֥ड़ࡰţાíϲäʮW¬®ҌeרūȠkɬɻ̼ãüfƠSצɩςåȈHϚÎKǳͲOðÏȆƘ¼CϚǚ࢚˼ФÔ¤ƌĞ̪Qʤ´¼mȠJˀƲÀɠmǐnǔĎȆÞǠN~ʢĜ¶ƌĆĘźʆȬ˪ĚĒ¸ĞGȖƴƀj`ĢçĶāàŃºēĢĖćYÀŎüôQÐÂŎŞǆŞêƖoˆDĤÕºÑǘÛˤ³̀gńƘĔÀ^ªƂ`ªt¾äƚêĦĀ¼ÐĔǎ¨Ȕ»͠^ˮÊȦƤøxRrŜH¤¸ÂxDÄ|ø˂˜ƮÐ¬ɚwɲFjĔ²Äw°ǆdÀÉ_ĸdîàŎjÊêTĞªŌŜWÈ|tqĢUB~´°ÎFCU¼pĀēƄN¦¾O¶łKĊOjĚj´ĜYp{¦SĚÍ\\\\T×ªV÷Ší¨ÅDK°ßtŇĔK¨ǵÂcḷ̌ĚǣȄĽFlġUĵŇȣFʉɁMğįʏƶɷØŭOǽ«ƽū¹Ʊő̝Ȩ§ȞʘĖiɜɶʦ}¨֪ࠜ̀ƇǬ¹ǨE˦ĥªÔêFxúQEr´Wrh¤Ɛ \\\\talĈDJÜ|[Pll̚¸ƎGú´P¬W¦^¦H]prRn|or¾wLVnÇIujkmon£cX^Bh`¥V¦U¤¸}xRj[^xN[~ªxQ[`ªHÆÂExx^wN¶Ê|¨ìMrdYpoRzNyÀDs~bcfÌ`L¾n|¾T°c¨È¢ar¤`[|òDŞĔöxElÖdHÀI`Ď\\\\Àì~ÆR¼tf¦^¢ķ¶eÐÚMptgjɡČÅyġLûŇV®ÄÈƀĎ°P|ªVVªj¬ĚÒêp¬E|ŬÂc|ÀtƐK f{ĘFĒƌXƲąo½Ę\\\\¥o}Ûu£ç­kX{uĩ«āíÓUŅßŢqŤ¥lyň[oi{¦LńðFȪȖĒL¿Ìf£K£ʺoqNwğc`uetOj×°KJ±qÆġmĚŗos¬qehqsuH{¸kH¡ÊRǪÇƌbȆ¢´äÜ¢NìÉʖ¦â©Ż؛Ç@Vu»Aylßí¹ĵêÝlISò³C¹Ìâ²i¶Ìoú^H²CǜңǄ z¼g^èöŰ_Ĳĕê}gÁnUI«m]jvV¼euhwqAaW_µj»çjioQR¹ēÃßt@r³[ÛlćË^ÍÉáGOUÛOB±XkÅ¹£k|e]olkVÍ¼ÕqtaÏõjgÁ£§U^RLËnX°ÇBz^~wfvypV ¯ƫĉ˭ȫƗŷɿÿĿƑ˃ĝÿÃǃßËőó©ǐȍŒĖM×ÍEyxþp]ÉvïèvƀnÂĴÖ@V~Ĉ³MEĸÅĖtējyÄDXÄxGQuv_i¦aBçw˛wD©{tāmQ{EJ§KPśƘƿ¥@sCTÉ}ɃwƇy±gÑ}T[÷kÐç¦«SÒ¥¸ëBX½HáÅµÀğtSÝÂa[ƣ°¯¦Pï¡]£ġÒk®G²èQ°óMq}EóƐÇ\\\\@áügQÍu¥FTÕ¿Jû]|mvāÎYua^WoÀa·­ząÒot×¶CLƗi¯¤mƎHǊ¤îìɾŊìTdåwsRÖgĒųúÍġäÕ}Q¶¿A[¡{d×uQAMxVvMOmăl«ct[wº_ÇÊjbÂ£ĦS_éQZ_lwgOiýe`YYLq§IÁǳ£ÙË[ÕªuƏ³ÍTs·bÁĽäė[b[ŗfãcn¥îC¿÷µ[ŏÀQ­ōĉm¿Á^£mJVmL[{Ï_£F¥Ö{ŹA}×Wu©ÅaųĳƳhB{·TQqÙIķËZđ©Yc|M¡LeVUóK_QWk_ĥ¿ãZ»X\\\\ĴuUèlG®ěłTĠğDŃOrÍdÆÍz]±ŭ©Å]ÅÐ}UË¥©TċïxgckfWgi\\\\ÏĒ¥HkµEë{»ÏetcG±ahUiñiWsɁ·cCÕk]wȑ|ća}wVaĚá G°ùnM¬¯{ÈÐÆA¥ÄêJxÙ¢hP¢ÛºµwWOóFÁz^ÀŗÎú´§¢T¤ǻƺSėǵhÝÅQgvBHouʝl_o¿Ga{ïq{¥|ſĿHĂ÷aĝÇqZñiñC³ª»E`¨åXēÕqÉû[l}ç@čƘóO¿¡FUsAʽīccocÇS}£IS~ălkĩXçmĈŀÐoÐdxÒuL^T{r@¢ÍĝKén£kQyÅõËXŷƏL§~}kq»IHėǅjĝ»ÑÞoå°qTt|r©ÏS¯·eŨĕx«È[eM¿yupN~¹ÏyN£{©għWí»Í¾səšǅ_ÃĀɗ±ąĳĉʍŌŷSÉA±åǥɋ@ë£R©ąP©}ĹªƏj¹erLDĝ·{i«ƫC£µ\"]],\"encodeOffsets\":[[[127444,52594]],[[113793,40312]]]},\"properties\":{\"cp\":[111.670801,40.818311],\"name\":\"内蒙古\",\"childNum\":2}},{\"id\":\"210000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@L@@sa\"],[\"@@MnNm\"],[\"@@dc\"],[\"@@eÀC@b\"],[\"@@fXwkbrÄ`qg\"],[\"@@^jtWQ\"],[\"@@~ Y]c\"],[\"@@G`ĔN^_¿ZÃM\"],[\"@@iX¶BY\"],[\"@@YZ\"],[\"@@L_{Epf\"],[\"@@^WqCT\\\\\"],[\"@@\\\\[§t|¤_\"],[\"@@m`n_\"],[\"@@Ïxǌ{q_×^Giip\"],[\"@@@é^BntaÊU]x ¯ÄPĲ­°hʙK³VÕ@Y~|EvĹsÇ¦­L^pÃ²ŸÒG Ël]xxÄ_fT¤Ď¤cPC¨¸TVjbgH²sdÎdHt`B²¬GJję¶[ÐhjeXdlwhðSČ¦ªVÊÏÆZÆŶ®²^ÎyÅÎcPqńĚDMħĜŁH­kçvV[ĳ¼WYÀäĦ`XlR`ôLUVfK¢{NZdĒªYĸÌÚJRr¸SA|ƴgŴĴÆbvªØX~źB|¦ÕE¤Ð`\\\\|KUnnI]¤ÀÂĊnŎR®Ő¿¶\\\\ÀøíDm¦ÎbŨabaĘ\\\\ľãÂ¸atÎSƐ´©v\\\\ÖÚÌǴ¤Â¨JKrZ_ZfjþhPkx`YRIjJcVf~sCN¤ EhæmsHy¨SðÑÌ\\\\\\\\ĐRZk°IS§fqŒßýáĞÙÉÖ[^¯ǤŲê´\\\\¦¬ĆPM¯£»uïpùzExanµyoluqe¦W^£ÊL}ñrkqWňûPUP¡ôJoo·U}£[·¨@XĸDXm­ÛÝºGUCÁª½{íĂ^cjk¶Ã[q¤LÉö³cux«zZf²BWÇ®Yß½ve±ÃCý£W{Ú^q^sÑ·¨ÍOt¹·C¥GDrí@wÕKţÃ«V·i}xËÍ÷i©ĝɝǡ]{c±OW³Ya±_ç©HĕoƫŇqr³Lys[ñ³¯OSďOMisZ±ÅFC¥Pq{Ã[Pg}\\\\¿ghćOk^ģÁFıĉĥM­oEqqZûěŉ³F¦oĵhÕP{¯~TÍlªNßYÐ{Ps{ÃVUeĎwk±ŉVÓ½ŽJãÇÇ»Jm°dhcÀffdF~ĀeĖd`sx² ®EżĀdQÂd^~ăÔH¦\\\\LKpĄVez¤NP ǹÓRÆąJSh­a[¦´ÂghwmBÐ¨źhI|VV|p] Â¼èNä¶ÜBÖ¼L`¼bØæKVpoúNZÞÒKxpw|ÊEMnzEQIZZNBčÚFÜçmĩWĪñtÞĵÇñZ«uD±|Əlĳ¥ãn·±PmÍada CLǑkùó¡³Ï«QaċÏOÃ¥ÕđQȥċƭy³ÃA\"]],\"encodeOffsets\":[[[123686,41445]],[[126019,40435]],[[124393,40128]],[[126117,39963]],[[125322,40140]],[[126686,40700]],[[126041,40374]],[[125584,40168]],[[125453,40165]],[[125362,40214]],[[125280,40291]],[[125774,39997]],[[125976,40496]],[[125822,39993]],[[125509,40217]],[[122731,40949]]]},\"properties\":{\"cp\":[123.429096,41.796767],\"name\":\"辽宁\",\"childNum\":16}},{\"id\":\"220000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@pä³PClFbbÍzwBGĭZÅi»lY­ċ²SgkÇ£^Sqd¯R©é£¯S\\\\cZ¹iűƏCuƍÓXoR}M^o£R}oªU­FuuXHlEÅÏ©¤ÛmTþ¤D²ÄufàÀ­XXÈ±AeyYw¬dvõ´KÊ£\\\\rµÄlidā]|î©¾DÂVH¹Þ®ÜWnCķ W§@\\\\¸~¤Vp¸póIO¢VOŇürXql~òÉK]¤¥Xrfkvzpm¶bwyFoúvð¼¤ N°ąO¥«³[éǡű_°Õ\\\\ÚÊĝþâőàerR¨­JYlďQ[ ÏYëÐ§TGztnß¡gFkMāGÁ¤ia ÉÈ¹`\\\\xs¬dĆkNnuNUuP@vRY¾\\\\¢GªóĄ~RãÖÎĢùđŴÕhQxtcæëSɽŉíëǉ£ƍG£nj°KƘµDsØÑpyĆ¸®¿bXp]vbÍZuĂ{n^IüÀSÖ¦EvRÎûh@â[ƏÈô~FNr¯ôçR±­HÑlĢ^¤¢OðævxsŒ]ÞÁTĠs¶¿âÆGW¾ìA¦·TÑ¬è¥ÏÐJ¨¼ÒÖ¼ƦɄxÊ~StD@Ă¼Ŵ¡jlºWvÐzƦZÐ²CH AxiukdGgetqmcÛ£Ozy¥cE}|¾cZk¿uŐã[oxGikfeäT@SUwpiÚFM©£è^Ú`@v¶eňf heP¶täOlÃUgÞzŸU`l}ÔÆUvØ_Ō¬Öi^ĉi§²ÃB~¡ĈÚEgc|DC_Ȧm²rBx¼MÔ¦ŮdĨÃâYxƘDVÇĺĿg¿cwÅ\\\\¹¥Yĭl¤OvLjM_a W`zļMž·\\\\swqÝSAqŚĳ¯°kRē°wx^ĐkǂÒ\\\\]nrĂ}²ĊŲÒøãh·M{yMzysěnĒġV·°G³¼XÀ¤¹i´o¤ŃÈ`ÌǲÄUĞd\\\\iÖmÈBĤÜɲDEh LG¾ƀÄ¾{WaYÍÈĢĘÔRîĐj}ÇccjoUb½{h§Ǿ{KƖµÎ÷GĀÖŠåưÎs­lyiē«`å§H¥Ae^§GK}iã\\\\c]v©ģZmÃ|[M}ģTɟĵÂÂ`ÀçmFK¥ÚíÁbX³ÌQÒHof{]ept·GŋĜYünĎųVY^ydõkÅZW«WUa~U·SbwGçǑiW^qFuNĝ·EwUtW·Ýďæ©PuqEzwAVXRãQ`­©GMehccďÏd©ÑW_ÏYƅ»é\\\\ɹ~ǙG³mØ©BšuT§Ĥ½¢Ã_Ã½L¡ýqT^rme\\\\PpZZbyuybQefµ]UhĿDCmûvaÙNSkCwncćfv~YÇG\"],\"encodeOffsets\":[[130196,42528]]},\"properties\":{\"cp\":[125.3245,43.886841],\"name\":\"吉林\",\"childNum\":1}},{\"id\":\"230000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƨĶTLÇyqpÇÛqe{~oyen}s`qiXGù]Ëp½©lÉÁp]Þñ´FĂ^fäîºkàz¼BUvÈ@\"],[\"@@UµNÿ¥īèçHÍøƕ¶Lǽ|g¨|a¾pVidd~ÈiíďÓQġėÇZÎXb½|ſÃH½KFgɱCģÛÇAnjÕc[VĝǱÃËÇ_ £ń³pj£º¿»WH´¯U¸đĢmtĜyzzNN|g¸÷äűÑ±ĉā~mq^[ǁÑďlw]¯xQĔ¯l°řĴrBÞTxr[tŽ¸ĻN_yX`biNKuP£kZĮ¦[ºxÆÀdhĹŀUÈƗCwáZħÄŭcÓ¥»NAw±qȥnD`{ChdÙFć}¢A±Äj¨]ĊÕjŋ«×`VuÓÅ~_kŷVÝyhVkÄãPsOµfgeŇµf@u_Ù ÙcªNªÙEojVxT@ãSefjlwH\\\\pŏäÀvlY½d{F~¦dyz¤PÜndsrhfHcvlwjF£G±DÏƥYyÏu¹XikĿ¦ÏqƗǀOŜ¨LI|FRĂn sª|C˜zxAè¥bfudTrFWÁ¹Am|ĔĕsķÆF´N}ćUÕ@Áĳſmuçuð^ÊýowFzØÎĕNőǏȎôªÌŒǄàĀÄ˄ĞŀƒʀĀƘŸˮȬƬĊ°Uzouxe]}AyÈW¯ÌmKQ]Īºif¸ÄX|sZt|½ÚUÎ lk^p{f¤lºlÆW A²PVÜPHÊâ]ÎĈÌÜk´\\\\@qàsĔÄQºpRij¼èi`¶bXrBgxfv»uUi^v~J¬mVp´£´VWrnP½ì¢BX¬hðX¹^TjVriªjtŊÄmtPGx¸bgRsT`ZozÆO]ÒFôÒOÆŊvÅpcGêsx´DR{AEOr°x|íb³Wm~DVjºéNNËÜ˛ɶ­GxŷCSt}]ûōSmtuÇÃĕNāg»íT«u}ç½BĵÞʣ¥ëÊ¡MÛ³ãȅ¡ƋaǩÈÉQG¢·lG|tvgrrf«ptęŘnÅĢrI²¯LiØsPf_vĠdxM prʹL¤¤eËÀđKïÙVY§]Ióáĥ]ķK¥j|pŇ\\\\kzţ¦šnņäÔVĂîĪ¬|vW®l¤èØrxm¶ă~lÄƯĄ̈́öȄEÔ¤ØQĄĄ»ƢjȦOǺ¨ìSŖÆƬyQv`cwZSÌ®ü±Ǆ]ŀç¬B¬©ńzƺŷɄeeOĨSfm ĊƀP̎ēz©ĊÄÕÊmgÇsJ¥ƔŊśæÎÑqv¿íUOµªÂnĦÁ_½ä@êí£P}Ġ[@gġ}gɊ×ûÏWXá¢užƻÌsNÍ½ƎÁ§čŐAēeL³àydl¦ĘVçŁpśǆĽĺſÊQíÜçÛġÔsĕ¬Ǹ¯YßċġHµ ¡eå`ļrĉŘóƢFìĎWøxÊkƈdƬv|I|·©NqńRŀ¤éeŊŀàŀU²ŕƀBQ£Ď}L¹Îk@©ĈuǰųǨÚ§ƈnTËÇéƟÊcfčŤ^XmHĊĕË«W·ċëx³ǔķÐċJāwİ_ĸȀ^ôWr­°oú¬ĦŨK~ȰCĐ´Ƕ£fNÎèâw¢XnŮeÂÆĶ¾¾xäLĴĘlļO¤ÒĨA¢Êɚ¨®ØCÔ ŬGƠƦYĜĘÜƬDJg_ͥœ@čŅĻA¶¯@wÎqC½Ĉ»NăëKďÍQÙƫ[«ÃígßÔÇOÝáWñuZ¯ĥŕā¡ÑķJu¤E å¯°WKÉ±_d_}}vyõu¬ï¹ÓU±½@gÏ¿rÃ½DgCdµ°MFYxw¿CG£Rƛ½Õ{]L§{qqą¿BÇƻğëܭǊË|c²}Fµ}ÙRsÓpg±QNqǫŋRwŕnéÑÉK«SeYRŋ@{¤SJ}D Ûǖ֍]gr¡µŷjqWÛham³~S«Þ]\"]],\"encodeOffsets\":[[[127123,51780]],[[134456,44547]]]},\"properties\":{\"cp\":[126.642464,45.756967],\"name\":\"黑龙江\",\"childNum\":2}},{\"id\":\"320000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@cþÅPi`ZRu¥É\\\\]~°Y`µÓ^phÁbnÀşúòaĬºTÖŒbe¦¦{¸ZâćNp©Hr|^mjhSEb\\\\afv`sz^lkljÄtg¤D­¾X¿À|ĐiZȀåB·î}GL¢õcßjayBFµÏC^ĭcÙt¿sğH]j{s©HM¢QnDÀ©DaÜÞ·jgàiDbPufjDk`dPOîhw¡ĥ¥GP²ĐobºrYî¶aHŢ´ ]´rılw³r_{£DB_Ûdåuk|Ũ¯F Cºyr{XFye³Þċ¿ÂkĭB¿MvÛpm`rÚã@Ę¹hågËÖƿxnlč¶Åì½Ot¾dJlVJĂǀŞqvnO^JZż·Q}êÍÅmµÒ]ƍ¦Dq}¬R^èĂ´ŀĻĊIÔtĲyQŐĠMNtR®òLhĚs©»}OÓGZz¶A\\\\jĨFäOĤHYJvÞHNiÜaĎÉnFQlNM¤B´ĄNöɂtpŬdfåqm¿QûùŞÚb¤uŃJŴu»¹ĄlȖħŴw̌ŵ²ǹǠ͛hĭłƕrçü±Yxcitğ®jű¢KOķCoy`å®VTa­_Ā]ŐÝɞï²ʯÊ^]afYǸÃĆēĪȣJđ͍ôƋÄÄÍīçÛɈǥ£­ÛmY`ó£Z«§°Ó³QafusNıǅ_k}¢m[ÝóDµ¡RLčiXyÅNïă¡¸iĔÏNÌŕoēdōîåŤûHcs}~Ûwbù¹£¦ÓCtOPrE^ÒogĉIµÛÅʹK¤½phMü`oæŀ\"],\"encodeOffsets\":[[121740,32276]]},\"properties\":{\"cp\":[118.767413,32.041544],\"name\":\"江苏\",\"childNum\":1}},{\"id\":\"330000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@E^dQ]K\"],[\"@@jX^j\"],[\"@@sfbU\"],[\"@@qP\\\\xz[ck\"],[\"@@R¢FX}°[s_\"],[\"@@Cb\\\\}\"],[\"@@e|v\\\\la{u\"],[\"@@v~u}\"],[\"@@QxÂF¯}\"],[\"@@¹nvÞs¯o\"],[\"@@rSkUEj\"],[\"@@bi­ZP\"],[\"@@p[}INf\"],[\"@@À¿\"],[\"@@¹dnb\"],[\"@@rSBnR\"],[\"@@g~h}\"],[\"@@FlEk\"],[\"@@OdPc\"],[\"@@v[u\\\\\"],[\"@@FjâL~wyoo~sµL\\\\\"],[\"@@¬e¹aN\"],[\"@@\\\\nÔ¡q]L³ë\\\\ÿ®QÖ\"],[\"@@ÊA­©[¬\"],[\"@@Kxv­\"],[\"@@@hlIk]\"],[\"@@pW{o||j\"],[\"@@Md|_mC\"],[\"@@¢X£ÏylD¼XtH\"],[\"@@hlÜ[LykAvyfw^E¤\"],[\"@@fp¤MusR\"],[\"@@®_ma~LÁ¬Z\"],[\"@@iMxZ\"],[\"@@ZcYd\"],[\"@@Z~dOSo|A¿qZv\"],[\"@@@`EN¡v\"],[\"@@|TY{\"],[\"@@@n@m\"],[\"@@XWkCT\\\\\"],[\"@@ºwZRkĕWO¢\"],[\"@@X®±GrÆª\\\\ÔáXq{\"],[\"@@ůTG°ĄLHm°UC\"],[\"@@¤aÜx~}dtüGæţŎíĔcŖpMËÐjē¢·ðĄÆMzjWKĎ¢Q¶À_ê_Bıi«pZgf¤Nrq]§ĂN®«H±yƳí¾×ŸīàLłčŴǝĂíÀBŖÕªÁŖHŗŉåqûõi¨hÜ·ñt»¹ýv_[«¸mYL¯QªmĉÅdMgÇjcº«ę¬­K­´B«Âącoċ\\\\xKd¡gěŧ«®á[~ıxu·ÅKsËÉc¢Ù\\\\ĭƛëbf¹­ģSĜkáƉÔ­ĈZB{aMµfzŉfåÂŧįƋǝÊĕġć£g³ne­ą»@­¦S®\\\\ßðChiqªĭiAuA­µ_W¥ƣO\\\\lċĢttC¨£t`PZäuXßBsĻyekOđġĵHuXBµ]×­­\\\\°®¬F¢¾pµ¼kŘó¬Wät¸|@L¨¸µrºù³Ù~§WIZW®±Ð¨ÒÉx`²pĜrOògtÁZ}þÙ]¡FKwsPlU[}¦Rvn`hq¬\\\\nQ´ĘRWb_ rtČFIÖkĦPJ¶ÖÀÖJĈĄTĚòC ²@PúØz©Pî¢£CÈÚĒ±hŖl¬â~nm¨f©iļ«mntuÖZÜÄjL®EÌFª²iÊxØ¨IÈhhst\"],[\"@@o\\\\VzRZ}y\"],[\"@@@°¡mÛGĕ¨§Ianá[ýƤjfæØLäGr\"]],\"encodeOffsets\":[[[125592,31553]],[[125785,31436]],[[125729,31431]],[[125513,31380]],[[125223,30438]],[[125115,30114]],[[124815,29155]],[[124419,28746]],[[124095,28635]],[[124005,28609]],[[125000,30713]],[[125111,30698]],[[125078,30682]],[[125150,30684]],[[124014,28103]],[[125008,31331]],[[125411,31468]],[[125329,31479]],[[125626,30916]],[[125417,30956]],[[125254,30976]],[[125199,30997]],[[125095,31058]],[[125083,30915]],[[124885,31015]],[[125218,30798]],[[124867,30838]],[[124755,30788]],[[124802,30809]],[[125267,30657]],[[125218,30578]],[[125200,30562]],[[124968,30474]],[[125167,30396]],[[124955,29879]],[[124714,29781]],[[124762,29462]],[[124325,28754]],[[123990,28459]],[[125366,31477]],[[125115,30363]],[[125369,31139]],[[122495,31878]],[[125329,30690]],[[125192,30787]]]},\"properties\":{\"cp\":[120.153576,30.287459],\"name\":\"浙江\",\"childNum\":45}},{\"id\":\"340000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@^iuLX^\"],[\"@@e©Ehl\"],[\"@@°ZÆëĎµmkǀwÌÕæhºgBĝâqÙĊzÖgņtÀÁĂÆáhEz|WzqD¹°Eŧl{ævÜcA`¤C`|´qxĲkq^³³GšµbíZ¹qpa±ď OH¦Ħx¢gPícOl_iCveaOjChß¸iÝbÛªCC¿mRV§¢A|t^iĠGÀtÚsd]ĮÐDE¶zAb àiödK¡~H¸íæAǿYj{ď¿À½W®£ChÃsikkly]_teu[bFaTign{]GqªoĈMYá|·¥f¥őaSÕėNµñĞ«Im_m¿Âa]uĜp Z_§{Cäg¤°r[_YjÆOdý[I[á·¥Q_nùgL¾mvˊBÜÆ¶ĊJhpc¹O]iŠ]¥ jtsggJÇ§w×jÉ©±EFË­KiÛÃÕYvsm¬njĻª§emná}k«ŕgđ²ÙDÇ¤í¡ªOy×Où±@DñSęćăÕIÕ¿IµĥOjNÕËT¡¿tNæŇàåyķrĕq§ÄĩsWÆßF¶X®¿mwRIÞfßoG³¾©uyHį{Ɓħ¯AFnuPÍÔzVdàôº^Ðæd´oG¤{S¬ćxã}ŧ×Kǥĩ«ÕOEÐ·ÖdÖsƘÑ¨[Û^Xr¢¼§xvÄÆµ`K§ tÒ´Cvlo¸fzŨð¾NY´ı~ÉĔēßúLÃÃ_ÈÏ|]ÂÏFlg`ben¾¢pUh~ƴĖ¶_r sĄ~cƈ]|r c~`¼{À{ȒiJjz`îÀT¥Û³]u}fïQl{skloNdjäËzDvčoQďHI¦rbtHĔ~BmlRV_ħTLnñH±DL¼Lªl§Ťa¸ĚlK²\\\\RòvDcÎJbt[¤D@®hh~kt°ǾzÖ@¾ªdbYhüóZ ň¶vHrľ\\\\ÊJuxAT|dmÀO[ÃÔG·ĚąĐlŪÚpSJ¨ĸLvÞcPæķŨ®mÐálwKhïgA¢ųÆ©Þ¤OÈm°K´\"]],\"encodeOffsets\":[[[121722,32278]],[[119475,30423]],[[119168,35472]]]},\"properties\":{\"cp\":[117.283042,31.86119],\"name\":\"安徽\",\"childNum\":3}},{\"id\":\"350000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@zht´]\"],[\"@@aj^~ĆG©O\"],[\"@@ed¨C}}i\"],[\"@@@vPGsQ\"],[\"@@sBzddW]Q\"],[\"@@S¨Q{\"],[\"@@NVucW\"],[\"@@qptBAq\"],[\"@@¸[mu\"],[\"@@Q\\\\pD]_\"],[\"@@jSwUadpF\"],[\"@@eXª~\"],[\"@@AjvFso\"],[\"@@fT_Çí\\\\v|ba¦jZÆy°\"],[\"@@IjJi\"],[\"@@wJIx«¼AoNe{M­\"],[\"@@K±¡ÓČäeZ\"],[\"@@k¡¹Eh~c®wBkUplÀ¡I~Māe£bN¨gZý¡a±Öcp©PhI¢QqÇGj|¥U g[Ky¬ŏv@OptÉEF\\\\@ åA¬V{XģĐBycpě¼³Ăp·¤¥ohqqÚ¡ŅLs^Ã¡§qlÀhH¨MCe»åÇGD¥zPO£čÙkJA¼ßėuĕeûÒiÁŧSW¥Qûŗ½ùěcÝ§SùĩąSWó«íęACµeRåǃRCÒÇZÍ¢ź±^dlstjD¸ZpuÔâÃH¾oLUêÃÔjjēò´ĄWƛ^Ñ¥Ħ@ÇòmOw¡õyJyD}¢ďÑÈġfZda©º²z£NjD°Ötj¶¬ZSÎ~¾c°¶ÐmxO¸¢Pl´SL|¥AȪĖMņĲg®áIJČĒü` QF¬h|ĂJ@zµ |ê³È ¸UÖŬŬÀEttĸr]ðM¤ĶĲHtÏ AĬkvsq^aÎbvdfÊòSD´Z^xPsĂrvƞŀjJd×ŘÉ ®AÎ¦ĤdxĆqAZRÀMźnĊ»İÐZ YXæJyĊ²·¶q§·K@·{sXãô«lŗ¶»o½E¡­«¢±¨Y®Ø¶^AvWĶGĒĢPlzfļtàAvWYãO_¤sD§ssČġ[kƤPX¦`¶®BBvĪjv©jx[L¥àï[F¼ÍË»ğV`«Ip}ccÅĥZEãoP´B@D¸m±z«Ƴ¿å³BRØ¶Wlâþäą`]Z£Tc ĹGµ¶Hm@_©k¾xĨôȉðX«½đCIbćqK³ÁÄš¬OAwã»aLŉËĥW[ÂGIÂNxĳ¤D¢îĎÎB§°_JGs¥E@¤ućPåcuMuw¢BI¿]zG¹guĮck\\\\_\"]],\"encodeOffsets\":[[[123250,27563]],[[122541,27268]],[[123020,27189]],[[122916,27125]],[[122887,26845]],[[122808,26762]],[[122568,25912]],[[122778,26197]],[[122515,26757]],[[122816,26587]],[[123388,27005]],[[122450,26243]],[[122578,25962]],[[121255,25103]],[[120987,24903]],[[122339,25802]],[[121042,25093]],[[122439,26024]]]},\"properties\":{\"cp\":[119.306239,26.075302],\"name\":\"福建\",\"childNum\":18}},{\"id\":\"360000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĢĨƐgļ¼ÂMD~ņªe^\\\\^§ý©j×cZØ¨zdÒa¶lÒJìõ`oz÷@¤uŞ¸´ôęöY¼HČƶajlÞƩ¥éZ[|h}^U  ¥pĄžƦO lt¸Æ Q\\\\aÆ|CnÂOjt­ĚĤdÈF`¶@Ðë ¦ōÒ¨SêvHĢûXD®QgÄWiØPÞìºr¤ǆNĠ¢lĄtZoCƞÔºCxrpĠV®Ê{f_Y`_eq®Aot`@oDXfkp¨|s¬\\\\DÄSfè©Hn¬^DhÆyøJhØxĢĀLÊƠPżċĄwȠĚ¦G®ǒĤäTŠÆ~Ħw«|TF¡nc³Ïå¹]ĉđxe{ÎÓvOEm°BƂĨİ|Gvz½ª´HàpeJÝQxnÀW­EµàXÅĪt¨ÃĖrÄwÀFÎ|ňÓMå¼ibµ¯»åDT±m[r«_gmQu~¥V\\\\OkxtL E¢Ú^~ýêPóqoě±_Êw§ÑªåƗā¼mĉŹ¿NQYBąrwģcÍ¥B­ŗÊcØiIƝĿuqtāwO]³YCñTeÉcaubÍ]trluīBÐGsĵıN£ï^ķqss¿FūūVÕ·´Ç{éĈýÿOER_đûIċâJh­ŅıNȩĕB¦K{Tk³¡OP·wnµÏd¯}½TÍ«YiµÕsC¯iM¤­¦¯P|ÿUHvhe¥oFTuõ\\\\OSsMòđƇiaºćXĊĵà·çhƃ÷Ç{ígu^đgm[×zkKN¶Õ»lčÓ{XSÆv©_ÈëJbVkĔVÀ¤P¾ºÈMÖxlò~ªÚàGĂ¢B±ÌKyáV¼Ã~­`gsÙfIƋlę¹e|~udjuTlXµf`¿Jd[\\\\L²\"],\"encodeOffsets\":[[116689,26234]]},\"properties\":{\"cp\":[115.892151,28.676493],\"name\":\"江西\",\"childNum\":1}},{\"id\":\"370000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Xjd]{K\"],[\"@@itbFHy\"],[\"@@HlGk\"],[\"@@TGy\"],[\"@@K¬U\"],[\"@@WdXc\"],[\"@@PtOs\"],[\"@@LnXhc\"],[\"@@ppVu]Or\"],[\"@@cdzAUa\"],[\"@@udRhnCI\"],[\"@@oIpR\"],[\"@@Ľč{fzƤîKÎMĮ]ZF½Y]â£ph¶¨râøÀÎǨ¤^ºÄGz~grĚĜlĞÆLĆǆ¢Îo¦cvKbgr°WhmZp L]LºcUÆ­nżĤÌĒbAnrOA´ȊcÀbƦUØrĆUÜøĬƞEzVL®öØBkŖÝĐĖ¹ŧ̄±ÀbÎÉnb²ĦhņBĖįĦåXćì@L¯´ywƕCéÃµė ƿ¸lµ¾Z|ZWyFY¨Mf~C¿`à_RÇzwƌfQnny´INoƬèôº|sTJULîVjǎ¾ĒØDz²XPn±ŴPè¸ŔLƔÜƺ_TüÃĤBBċÈöA´faM¨{«M`¶d¡ôÖ°mȰBÔjj´PM|c^d¤u¤Û´ä«ƢfPk¶Môl]Lb}su^ke{lCMrDÇ­]NÑFsmoõľHyGă{{çrnÓEƕZGª¹Fj¢ïWuøCǷë¡ąuhÛ¡^KxC`C\\\\bÅxì²ĝÝ¿_NīCȽĿåB¥¢·IŖÕy\\\\¹kxÃ£Č×GDyÃ¤ÁçFQ¡KtŵƋ]CgÏAùSedcÚźuYfyMmhUWpSyGwMPqŀÁ¼zK¶G­Y§Ë@´śÇµƕBm@IogZ¯uTMx}CVKï{éƵP_K«pÛÙqċtkkù]gTğwoɁsMõ³ăAN£MRkmEÊčÛbMjÝGuIZGPģãħE[iµBEuDPÔ~ª¼ęt]ûG§¡QMsğNPŏįzs£Ug{đJĿļā³]ç«Qr~¥CƎÑ^n¶ÆéÎR~Ż¸YI] PumŝrƿIā[xeÇ³L¯v¯s¬ÁY~}ťuŁgƋpÝĄ_ņī¶ÏSR´ÁP~¿Cyċßdwk´SsX|t`Ä ÈðAªìÎT°¦Dda^lĎDĶÚY°`ĪŴǒàŠv\\\\ebZHŖR¬ŢƱùęOÑM­³FÛWp[\"]],\"encodeOffsets\":[[[123806,39303]],[[123821,39266]],[[123742,39256]],[[123702,39203]],[[123649,39066]],[[123847,38933]],[[123580,38839]],[[123894,37288]],[[123043,36624]],[[123344,38676]],[[123522,38857]],[[123628,38858]],[[118260,36742]]]},\"properties\":{\"cp\":[117.000923,36.675807],\"name\":\"山东\",\"childNum\":13}},{\"id\":\"410000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ýLùµP³swIÓxcŢĞð´E®ÚPtĴXØxÂ¶@«ŕŕQGYfa[şußǩđš_X³ĳÕčC]kbc¥CS¯ëÍB©÷³­Si_}mYTt³xlàcČzÀD}ÂOQ³ÐTĨ¯ƗòËŖ[hłŦv~}ÂZ«¤lPÇ£ªÝŴÅR§ØnhctâknÏ­ľŹUÓÝdKuķI§oTũÙďkęĆH¸Ó\\\\Ä¿PcnS{wBIvÉĽ[GqµuŇôYgûZca©@½Õǽys¯}lgg@­C\\\\£asIdÍuCQñ[L±ęk·ţb¨©kK»KC²òGKmĨS`UQnk}AGēsqaJ¥ĐGRĎpCuÌy ã iMcplk|tRkðev~^´¦ÜSí¿_iyjI|ȑ|¿_»d}q^{Ƈdă}tqµ`Ƴĕg}V¡om½faÇo³TTj¥tĠRyK{ùÓjuµ{t}uËRivGçJFjµÍyqÎàQÂFewixGw½Yŷpµú³XU½ġyłåkÚwZX·l¢Á¢KzOÎÎjc¼htoDHr|­J½}JZ_¯iPq{tę½ĕ¦Zpĵø«kQĹ¤]MÛfaQpě±ǽ¾]u­Fu÷nčÄ¯ADp}AjmcEÇaª³o³ÆÍSƇĈÙDIzËčľ^KLiÞñ[aA²zzÌ÷D|[íÄ³gfÕÞd®|`Ć~oĠƑô³ŊD×°¯CsøÀ«ìUMhTº¨¸ǡîSÔDruÂÇZÖEvPZW~ØÐtĄE¢¦Ðy¸bô´oŬ¬²Ês~]®tªapŎJ¨Öº_Ŕ`Ŗ^Đ\\\\Ĝu~m²Ƹ¸fWĦrƔ}Î^gjdfÔ¡J}\\\\n C¦þWxªJRÔŠu¬ĨĨmFdM{\\\\d\\\\YÊ¢ú@@¦ª²SÜsC}fNècbpRmlØ^gd¢aÒ¢CZZxvÆ¶N¿¢T@uC¬^ĊðÄn|lGlRjsp¢ED}Fio~ÔN~zkĘHVsǲßjŬŢ`Pûàl¢\\\\ÀEhİgÞē X¼Pk|m\"],\"encodeOffsets\":[[118256,37017]]},\"properties\":{\"cp\":[113.665412,34.757975],\"name\":\"河南\",\"childNum\":1}},{\"id\":\"420000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@AB\"],[\"@@lskt\"],[\"@@¾«}{ra®pîÃ\\\\{øCËyyB±b\\\\òÝjKL ]ĎĽÌJyÚCƈćÎT´Å´pb©ÈdFin~BCo°BĎÃømv®E^vǾ½Ĝ²RobÜeN^ĺ£R¬lĶ÷YoĖ¥Ě¾|sOr°jY`~I¾®I{GqpCgyl{£ÍÍyPLÂ¡¡¸kWxYlÙæŁĢz¾V´W¶ùŸo¾ZHxjwfxGNÁ³Xéæl¶EièIH ujÌQ~v|sv¶Ôi|ú¢FhQsğ¦SiŠBgÐE^ÁÐ{čnOÂÈUÎóĔÊēĲ}Z³½Mŧïeyp·uk³DsÑ¨L¶_ÅuÃ¨w»¡WqÜ]\\\\Ò§tƗcÕ¸ÕFÏǝĉăxŻČƟOKÉġÿ×wg÷IÅzCg]m«ªGeçÃTC«[t§{loWeC@ps_Bp­rf_``Z|ei¡oċMqow¹DƝÓDYpûsYkıǃ}s¥ç³[§cY§HK«Qy]¢wwö¸ïx¼ņ¾Xv®ÇÀµRĠÐHM±cÏdƒǍũȅȷ±DSyúĝ£ŤĀàtÖÿï[îb\\\\}pĭÉI±Ñy¿³x¯No|¹HÏÛmjúË~TuęjCöAwě¬Rđl¯ Ñb­ŇTĿ_[IčĄʿnM¦ğ\\\\É[T·k¹©oĕ@A¾wya¥Y\\\\¥Âaz¯ãÁ¡k¥ne£ÛwE©Êō¶˓uoj_U¡cF¹­[WvP©whuÕyBF`RqJUw\\\\i¡{jEPïÿ½fćQÑÀQ{°fLÔ~wXgītêÝ¾ĺHd³fJd]HJ²EoU¥HhwQsƐ»Xmg±çve]DmÍPoCc¾_hhøYrŊU¶eD°Č_N~øĹĚ·`z]Äþp¼äÌQv\\\\rCé¾TnkžŐÚÜa¼ÝƆĢ¶ÛodĔňÐ¢JqPb ¾|J¾fXƐîĨ_Z¯À}úƲN_ĒÄ^ĈaŐyp»CÇÄKñL³ġM²wrIÒŭxjb[n«øæà ^²­h¯ÚŐªÞ¸Y²ĒVø}Ā^İ´LÚm¥ÀJÞ{JVųÞŃx×sxxƈē ģMřÚðòIfĊŒ\\\\Ʈ±ŒdÊ§ĘDvČ_Àæ~Dċ´A®µ¨ØLV¦êHÒ¤\"]],\"encodeOffsets\":[[[113712,34000]],[[115612,30507]],[[113649,34054]]]},\"properties\":{\"cp\":[114.298572,30.584355],\"name\":\"湖北\",\"childNum\":3}},{\"id\":\"430000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@nFTs\"],[\"@@ßÅÆá½ÔXrCOËRïÿĩ­TooQyÓ[ŅBE¬ÎÓXaį§Ã¸G °ITxpúxÚĳ¥ÏĢ¾edÄ©ĸGàGhM¤Â_U}Ċ}¢pczfþg¤ÇòAVM\"],[\"@@©KA·³CQ±Á«³BUƑ¹AtćOwD]JiØSm¯b£ylXHËÑ±H«C^õľAÅ§¤É¥ïyuǙuA¢^{ÌC´­¦ŷJ£^[ª¿ĕ~ƇN skóā¹¿ï]ă~÷O§­@Vm¡Qđ¦¢Ĥ{ºjÔª¥nf´~Õo×ÛąMąıuZmZcÒ ĲĪ²SÊǄŶ¨ƚCÖŎªQØ¼rŭ­«}NÏürÊ¬mjr@ĘrTW ­SsdHzƓ^ÇÂyUi¯DÅYlŹu{hT}mĉ¹¥ěDÿë©ıÓ[Oº£¥ótł¹MÕƪ`PDiÛU¾ÅâìUñBÈ£ýhedy¡oċ`pfmjP~kZaZsÐd°wj§@Ĵ®w~^kÀÅKvNmX\\\\¨aŃqvíó¿F¤¡@ũÑVw}S@j}¾«pĂrªg àÀ²NJ¶¶DôK|^ª°LX¾ŴäPĪ±£EXd^¶ĲÞÜ~u¸ǔMRhsRe`ÄofIÔ\\\\Ø  ićymnú¨cj ¢»GČìƊÿÐ¨XeĈĀ¾Oð Fi ¢|[jVxrIQ_EzAN¦zLU`cªxOTu RLÄ¢dVi`p˔vŎµªÉF~Ød¢ºgİàw¸Áb[¦Zb¦z½xBĖ@ªpºlS¸Ö\\\\Ĕ[N¥ˀmĎăJ\\\\ŀ`ňSÚĖÁĐiOĜ«BxDõĚivSÌ}iùÜnÐºG{p°M´wÀÒzJ²ò¨ oTçüöoÛÿñőĞ¤ùTz²CȆȸǎŪƑÐc°dPÎğË¶[È½u¯½WM¡­ÉB·rínZÒ `¨GA¾\\\\pēXhÃRC­üWGġuTé§ŎÑ©ò³I±³}_EÃħg®ęisÁPDmÅ{b[RÅs·kPŽƥóRoOV~]{g\\\\êYƪ¦kÝbiċƵGZ»Ěõó·³vŝ£ø@pyö_ëIkÑµbcÑ§y×dYØªiþ¨[]f]Ņ©C}ÁN»hĻħƏĩ\"]],\"encodeOffsets\":[[[115640,30489]],[[112543,27312]],[[116690,26230]]]},\"properties\":{\"cp\":[112.982279,28.19409],\"name\":\"湖南\",\"childNum\":3}},{\"id\":\"440000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@QdAua\"],[\"@@lxDLo\"],[\"@@sbhNLo\"],[\"@@Ă ā\"],[\"@@WltO[[\"],[\"@@Kr]S\"],[\"@@eI]y\"],[\"@@I|Mym\"],[\"@@Û³LS¼Y\"],[\"@@nvºBëui©`¾\"],[\"@@zdÛJw®\"],[\"@@°¯\"],[\"@@a yAª¸ËJIxØ@ĀHAmÃV¡ofuo\"],[\"@@sŗÃÔėAƁZÄ ~°ČPäh\"],[\"@@¶ÝÌvmĞh­ıQ\"],[\"@@HdSjĒ¢D}waru«ZqadYM\"],[\"@@el\\\\LqqU\"],[\"@@~rMo\\\\\"],[\"@@f^C\"],[\"@@øPªoj÷ÍÝħXČx°Q¨ıXNv\"],[\"@@gÇƳo[~tly\"],[\"@@EÆC¿\"],[\"@@OP\"],[\"@@wđógĝ[³¡VÙæÅöMÌ³¹pÁaËýý©D©ÜJŹƕģGą¤{ÙūÇO²«BƱéAÒĥ¡«BhlmtÃPµyU¯ucd·w_bŝcīímGO|KPȏŹãŝIŕŭŕ@Óoo¿ē±ß}ŭĲWÈCőâUâǙIğŉ©IĳE×Á³AówXJþ±ÌÜÓĨ£L]ĈÙƺZǾĆĖMĸĤfÎĵlŨnÈĐtFFĤêk¶^k°f¶g}®Faf`vXŲxl¦ÔÁ²¬Ð¦pqÊÌ²iXØRDÎ}Ä@ZĠsx®AR~®ETtĄZƈfŠŠHâÒÐAµ\\\\S¸^wĖkRzalŜ|E¨ÈNĀňZTpBh£\\\\ĎƀuXĖtKL¶G|»ĺEļĞ~ÜĢÛĊrOÙîvd]n¬VÊĜ°RÖpMƂªFbwEÀ©\\\\¤]ŸI®¥D³|Ë]CöAŤ¦æ´¥¸Lv¼¢ĽBaôF~®²GÌÒEYzk¤°ahlVÕI^CxĈPsBƒºV¸@¾ªR²ĨN]´_eavSivc}p}Đ¼ƌkJÚe th_¸ ºx±ò_xNË²@ă¡ßH©Ùñ}wkNÕ¹ÇO½¿£ĕ]ly_WìIÇª`uTÅxYĒÖ¼kÖµMjJÚwn\\\\hĒv]îh|ÈƄøèg¸Ķß ĉĈWb¹ƀdéĘNTtP[öSvrCZaGubo´ŖÒÇĐ~¡zCIözx¢PnÈñ @ĥÒ¦]ƞV}³ăĔñiiÄÓVépKG½ÄÓávYoC·sitiaÀyŧÎ¡ÈYDÑům}ý|m[węõĉZÅxUO}÷N¹³ĉo_qtăqwµŁYÙǝŕ¹tïÛUÃ¯mRCºĭ|µÕÊK½Rē ó]GªęAx»HO£|ām¡diď×YïYWªŉOeÚtĐ«zđ¹TāúEá²\\\\ķÍ}jYàÙÆſ¿Çdğ·ùTßÇţʄ¡XgWÀǇğ·¿ÃOj YÇ÷Qěi\"]],\"encodeOffsets\":[[[117381,22988]],[[116552,22934]],[[116790,22617]],[[116973,22545]],[[116444,22536]],[[116931,22515]],[[116496,22490]],[[116453,22449]],[[113301,21439]],[[118726,21604]],[[118709,21486]],[[113210,20816]],[[115482,22082]],[[113171,21585]],[[113199,21590]],[[115232,22102]],[[115739,22373]],[[115134,22184]],[[113056,21175]],[[119573,21271]],[[119957,24020]],[[115859,22356]],[[116561,22649]],[[116285,22746]]]},\"properties\":{\"cp\":[113.280637,23.125178],\"name\":\"广东\",\"childNum\":24}},{\"id\":\"450000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@H TQ§A\"],[\"@@ĨÊªLƊDÎĹĐCǦė¸zÚGn£¾rªŀÜt¬@ÖÚSx~øOŒŶÐÂæȠ\\\\ÈÜObĖw^oÞLf¬°bI lTØBÌF£Ć¹gñĤaYt¿¤VSñK¸¤nM¼JE±½¸ñoÜCƆæĪ^ĚQÖ¦^f´QüÜÊz¯lzUĺš@ìp¶n]sxtx¶@~ÒĂJb©gk{°~c°`Ô¬rV\\\\la¼¤ôá`¯¹LCÆbxEræOv[H­[~|aB£ÖsºdAĐzNÂðsÞÆĤªbab`ho¡³F«èVlo¤ÔRzpp®SĪº¨ÖºNĳd`a¦¤F³ºDÎńĀìCĜº¦Ċ~nS|gźvZkCÆj°zVÈÁƔ]LÊFZgčP­kini«qÇczÍY®¬Ů»qR×ō©DÕ§ƙǃŵTÉĩ±ıdÑnYYĲvNĆĆØÜ Öp}e³¦m©iÓ|¹ħņ|ª¦QF¢Â¬ʖovg¿em^ucà÷gÕuíÙćĝ}FĻ¼Ĺ{µHKsLSđƃrč¤[AgoSŇYMÿ§Ç{FśbkylQxĕ]T·¶[BÑÏGáşşƇeăYSs­FQ}­BwtYğÃ@~CÍQ ×WjË±rÉ¥oÏ ±«ÓÂ¥kwWűmcih³K~µh¯e]lµélEģEďsmÇŧē`ãògK_ÛsUʝćğ¶höO¤Ǜn³c`¡y¦CezYwa[ďĵűMę§]XÎ_íÛ]éÛUćİÕBƣ±dy¹T^dûÅÑŦ·PĻþÙ`K¦¢ÍeĥR¿³£[~äu¼dltW¸oRM¢ď\\\\z}Æzdvň{ÎXF¶°Â_ÒÂÏL©ÖTmu¼ãlīkiqéfA·Êµ\\\\őDc¥ÝFyÔćcűH_hLÜêĺĐ¨c}rn`½Ì@¸¶ªVLhŒ\\\\Ţĺk~Ġið°|gtTĭĸ^xvKVGréAébUuMJVÃO¡qĂXËSģãlýà_juYÛÒBG^éÖ¶§EGÅzěƯ¤EkN[kdåucé¬dnYpAyČ{`]þ¯TbÜÈk¡ĠvàhÂƄ¢Jî¶²\"]],\"encodeOffsets\":[[[111707,21520]],[[107619,25527]]]},\"properties\":{\"cp\":[108.320004,22.82402],\"name\":\"广西\",\"childNum\":2}},{\"id\":\"460000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¦Ŝil¢XƦƞòïè§ŞCêɕrŧůÇąĻõ·ĉ³œ̅kÇm@ċȧŧĥĽʉ­ƅſȓÒË¦ŝE}ºƑ[ÍĜȋ gÎfǐÏĤ¨êƺ\\\\Ɔ¸ĠĎvʄȀÐ¾jNðĀÒRZǆzÐŘÎ°H¨Ƣb²_Ġ \"],\"encodeOffsets\":[[112750,20508]]},\"properties\":{\"cp\":[110.33119,20.031971],\"name\":\"海南\",\"childNum\":1}},{\"id\":\"510000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@LqKr\"],[\"@@[ĻéV£_ţġñpG réÏ·~ąSfy×Í·ºſƽiÍıƣıĻmHH}siaX@iÇ°ÁÃ×t«­T¤JJJyJÈ`Ohß¦¡uËhIyCjmÿwZGTiSsOB²fNmsPa{M{õE^Hj}gYpaeu¯oáwHjÁ½M¡pMuåmni{fk\\\\oÎqCwEZ¼KĝAy{m÷LwO×SimRI¯rKõBS«sFe]fµ¢óY_ÆPRcue°Cbo×bd£ŌIHgtrnyPt¦foaXďxlBowz_{ÊéWiêEGhÜ¸ºuFĈIxf®Y½ĀǙ]¤EyF²ċw¸¿@g¢§RGv»áW`ÃĵJwi]t¥wO­½a[×]`Ãi­üL¦LabbTÀåc}ÍhÆh®BHî|îºÉk­¤Sy£ia©taį·Ɖ`ō¥UhOĝLk}©Fos´JmµlŁuønÑJWÎªYÀïAetTŅÓGË«bo{ıwodƟ½OġÜÂµxàNÖ¾P²§HKv¾]|BÆåoZ`¡Ø`ÀmºĠ~ÌÐ§nÇ¿¤]wğ@srğu~Io[é±¹ ¿ſđÓ@qg¹zƱřaí°KtÇ¤V»Ã[ĩǭƑ^ÇÓ@áťsZÏÅĭƋěpwDóÖáŻneQËq·GCœýS]x·ýq³OÕ¶Qzßti{řáÍÇWŝŭñzÇWpç¿JXĩè½cFÂLiVjx}\\\\NŇĖ¥GeJA¼ÄHfÈu~¸Æ«dE³ÉMA|bÒćhG¬CMõƤąAvüVéŀ_VÌ³ĐwQj´·ZeÈÁ¨X´Æ¡Qu·»ÕZ³ġqDoy`L¬gdp°şp¦ėìÅĮZ°Iähzĵf²å ĚÑKpIN|Ñz]ń·FU×é»R³MÉ»GM«kiér}Ã`¹ăÞmÈnÁîRǀ³ĜoİzŔwǶVÚ£À]ɜ»ĆlƂ²ĠþTº·àUȞÏʦ¶I«dĽĢdĬ¿»Ĕ×h\\\\c¬ä²GêëĤł¥ÀǿżÃÆMº}BÕĢyFVvwxBèĻĒ©ĈtCĢɽŠȣ¦āæ·HĽîôNÔ~^¤Ɗu^s¼{TA¼ø°¢İªDè¾Ň¶ÝJ®Z´ğ~Sn|ªWÚ©òzPOȸbð¢|øĞŒQìÛÐ@ĞǎRS¤Á§di´ezÝúØã]HqkIþËQÇ¦ÃsÇ¤[E¬ÉŪÍxXƒ·ÖƁİlƞ¹ª¹|XÊwnÆƄmÀêErĒtD®ċæcQE®³^ĭ¥©l}äQtoŖÜqÆkµªÔĻĴ¡@Ċ°B²Èw^^RsºTĀ£ŚæQPJvÄz^Đ¹Æ¯fLà´GC²dt­ĀRt¼¤ĦOðğfÔðDŨŁĞƘïPÈ®âbMüÀXZ ¸£@Å»»QÉ­]dsÖ×_Í_ÌêŮPrĔĐÕGĂeZÜîĘqBhtO ¤tE[h|YÔZśÎs´xº±Uñt|OĩĠºNbgþJy^dÂY Į]Řz¦gC³R`Āz¢Aj¸CL¤RÆ»@­Ŏk\\\\Ç´£YW}z@Z}Ã¶oû¶]´^NÒ}èNªPÍy¹`S°´ATeVamdUĐwʄvĮÕ\\\\uÆŗ¨Yp¹àZÂmWh{á}WØǍÉüwga§áCNęÎ[ĀÕĪgÖÉªXøx¬½Ů¦¦[NÎLÜUÖ´òrÙŠxR^JkĳnDX{U~ET{ļº¦PZcjF²Ė@pg¨B{u¨ŦyhoÚD®¯¢ WòàFÎ¤¨GDäz¦kŮPġqË¥À]eâÚ´ªKxīPÖ|æ[xÃ¤JÞĥsNÖ½I¬nĨY´®ÐƐmDŝuäđđEbee_v¡}ìęǊē}qÉåT¯µRs¡M@}ůaa­¯wvƉåZw\\\\Z{åû^\"]],\"encodeOffsets\":[[[108815,30935]],[[110617,31811]]]},\"properties\":{\"cp\":[104.065735,30.659462],\"name\":\"四川\",\"childNum\":2}},{\"id\":\"520000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@G\\\\lY£in\"],[\"@@q|mc¯tÏVSÎ\"],[\"@@hÑ£IsNgßHHªķÃh_¹¡ĝÄ§ń¦uÙùgS¯JH|sÝÅtÁïyMDč»eÕtA¤{b\\\\}G®u\\\\åPFqwÅaDK°ºâ_£ùbµmÁÛĹM[q|hlaªāI}Ñµ@swtwm^oµDéĽŠyVky°ÉûÛR³e¥]RÕěħ[ƅåÛDpJiVÂF²I»mN·£LbÒYbWsÀbpkiTZĄă¶Hq`ĥ_J¯ae«KpÝx]aĕÛPÇȟ[ÁåŵÏő÷Pw}TÙ@Õs«ĿÛq©½m¤ÙH·yǥĘĉBµĨÕnđ]K©œáGçş§ÕßgǗĦTèƤƺ{¶ÉHÎd¾ŚÊ·OÐjXWrãLyzÉAL¾ę¢bĶėy_qMĔąro¼hĊw¶øV¤w²Ĉ]ÊKx|`ź¦ÂÈdrcÈbe¸`I¼čTF´¼Óýȃr¹ÍJ©k_șl³´_pĐ`oÒh¶pa^ÓĔ}D»^Xy`d[KvJPhèhCrĂĚÂ^Êƌ wZL­Ġ£ÁbrzOIlMMĪŐžËr×ÎeŦtw|¢mKjSǘňĂStÎŦEtqFT¾Eì¬¬ôxÌO¢ K³ŀºäYPVgŎ¦ŊmŞ¼VZwVlz¤£Tl®ctĽÚó{G­AÇge~Îd¿æaSba¥KKûj®_Ä^\\\\Ø¾bP®¦x^sxjĶI_Ä Xâ¼Hu¨Qh¡À@Ëô}±GNìĎlT¸`V~R°tbÕĊ`¸úÛtÏFDu[MfqGH·¥yAztMFe|R_GkChZeÚ°tov`xbDnÐ{E}ZèxNEÞREn[Pv@{~rĆAB§EO¿|UZ~ìUf¨J²ĂÝÆsªB`s¶fvö¦Õ~dÔq¨¸º»uù[[§´sb¤¢zþF¢ÆÀhÂW\\\\ıËIÝo±ĭŠ£þÊs}¡R]ěDg´VG¢j±®èºÃmpU[Áëº°rÜbNu¸}º¼`niºÔXĄ¤¼ÔdaµÁ_ÃftQQgR·Ǔv}Ý×ĵ]µWc¤F²OĩųãW½¯K©]{LóµCIµ±Mß¿h©āq¬o½~@i~TUxŪÒ¢@£ÀEîôruńb[§nWuMÆLl¿]x}ĳ­½\"]],\"encodeOffsets\":[[[112158,27383]],[[112105,27474]],[[112095,27476]]]},\"properties\":{\"cp\":[106.713478,26.578343],\"name\":\"贵州\",\"childNum\":3}},{\"id\":\"530000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@[ùx½}ÑRHYīĺûsÍniEoã½Ya²ė{c¬ĝgĂsAØÅwďõzFjw}«Dx¿}Uũlê@HÅ­F¨ÇoJ´Ónũuą¡Ã¢pÒÅØ TF²xa²ËXcÊlHîAßËŁkŻƑŷÉ©hW­æßUËs¡¦}teèÆ¶StÇÇ}Fd£jĈZĆÆ¤Tč\\\\D}O÷£U§~ŃGåŃDĝ¸Tsd¶¶Bª¤u¢ŌĎo~t¾ÍŶÒtD¦ÚiôözØX²ghįh½Û±¯ÿm·zR¦Ɵ`ªŊÃh¢rOÔ´£Ym¼èêf¯ŪĽncÚbw\\\\zlvWªâ ¦gmĿBĹ£¢ƹřbĥkǫßeeZkÙIKueT»sVesbaĕ  ¶®dNĄÄpªy¼³BE®lGŭCǶwêżĔÂepÍÀQƞpC¼ŲÈ­AÎô¶RäQ^Øu¬°_Èôc´¹ò¨PÎ¢hlĎ¦´ĦÆ´sâÇŲPnÊD^¯°Upv}®BPÌªjǬxSöwlfòªvqĸ|`H­viļndĜ­Ćhňem·FyÞqóSį¯³X_ĞçêtryvL¤§z¦c¦¥jnŞklD¤øz½ĜàĂŧMÅ|áƆàÊcðÂFÜáŢ¥\\\\\\\\ºİøÒÐJĴîD¦zK²ǏÎEh~CD­hMn^ÌöÄ©ČZÀaüfɭyœpį´ěFűk]Ôě¢qlÅĆÙa¶~ÄqêljN¬¼HÊNQ´ê¼VØ¸E^ŃÒyM{JLoÒęæe±Ķygã¯JYÆĭĘëo¥Šo¯hcK«z_prC´ĢÖY¼ v¸¢RÅW³Â§fÇ¸Yi³xR´ďUË`êĿUûuĆBƣöNDH«ĈgÑaB{ÊNF´¬c·Åv}eÇÃGB»If¦HňĕM~[iwjUÁKE¾dĪçWIèÀoÈXòyŞŮÈXâÎŚj|àsRyµÖPr´þ ¸^wþTDŔHr¸RÌmfżÕâCôoxĜƌÆĮÐYtâŦÔ@]ÈǮƒ\\\\Ī¼Ä£UsÈ¯LbîƲŚºyhr@ĒÔƀÀ²º\\\\êpJ}ĠvqtĠ@^xÀ£È¨mËÏğ}n¹_¿¢×Y_æpÅA^{½Lu¨GO±Õ½ßM¶wÁĢÛPƢ¼pcĲx|apÌ¬HÐŊSfsðBZ¿©XÏÒKk÷Eû¿SrEFsÕūkóVǥŉiTL¡n{uxţÏhôŝ¬ğōNNJkyPaqÂğ¤K®YxÉƋÁ]āęDqçgOgILu\\\\_gz]W¼~CÔē]bµogpÑ_oď`´³Țkl`IªºÎȄqÔþ»E³ĎSJ»_f·adÇqÇc¥Á_Źw{L^É±ćxU£µ÷xgĉp»ĆqNē`rĘzaĵĚ¡K½ÊBzyäKXqiWPÏÉ¸½řÍcÊG|µƕƣGË÷k°_^ý|_zċBZocmø¯hhcæ\\\\lMFlư£ĜÆyHF¨µêÕ]HAàÓ^it `þßäkĤÎT~Wlÿ¨ÔPzUCNVv [jâôDôď[}z¿msSh¯{jïğl}šĹ[őgK©U·µË@¾m_~q¡f¹ÅË^»f³ø}Q¡ÖË³gÍ±^Ç\\\\ëÃA_¿bWÏ[¶ƛé£F{īZgm@|kHǭƁć¦UĔť×ë}ǝeďºȡȘÏíBÉ£āĘPªĳ¶ŉÿy©nď£G¹¡I±LÉĺÑdĉÜW¥}gÁ{aqÃ¥aıęÏZï`\"],\"encodeOffsets\":[[104636,22969]]},\"properties\":{\"cp\":[102.712251,25.040609],\"name\":\"云南\",\"childNum\":1}},{\"id\":\"540000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÂhľxŖxÒVºÅâAĪÝȆµę¯Ňa±r_w~uSÕňqOj]ɄQ£ZUDûoY»©M[L¼qãË{VÍçWVi]ë©Ä÷àyƛhÚU°adcQ~Mx¥cc¡ÙaSyFÖk­uRýq¿ÔµQĽ³aG{¿FµëªéĜÿª@¬·K·àariĕĀ«V»ŶĴūgèLǴŇƶaftèBŚ£^âǐÝ®M¦ÁǞÿ¬LhJ¾óƾÆºcxwf]Y´¦|QLn°adĊ\\\\¨oǀÍŎ´ĩĀd`tÊQŞŕ|¨C^©Ĉ¦¦ÎJĊ{ëĎjª²rÐl`¼Ą[t|¦Stè¾PÜK¸dƄı]s¤î_v¹ÎVòŦj£Əsc¬_Ğ´|Ł¦Av¦w`ăaÝaa­¢e¤ı²©ªSªÈMĄwÉØŔì@T¤Ę\\\\õª@þo´­xA sÂtŎKzó´ÇĊµ¢r^nĊ­Æ¬×üG¢³ {âĊ]G~bÀgVjzlhǶfOfdªB]pjTOtĊn¤}®¦Č¥d¢¼»ddY¼t¢eȤJ¤}Ǿ¡°§¤AÐlc@ĝsªćļđAçwxUuzEÖġ~AN¹ÄÅȀŻ¦¿ģŁéì±Hãd«g[Ø¼ēÀcīľġ¬cJµÐʥVȝ¸ßS¹ý±ğkƁ¼ą^ɛ¤Ûÿb[}¬ōõÃ]ËNm®g@Bg}ÍF±ǐyL¥íCIĳÏ÷Ñį[¹¦[âšEÛïÁÉdƅß{âNÆāŨß¾ě÷yC£k­´ÓH@Â¹TZ¥¢į·ÌAÐ§®Zcv½Z­¹|ÅWZqgW|ieZÅYVÓqdqbc²R@c¥Rã»GeeƃīQ}J[ÒK¬Ə|oėjġĠÑN¡ð¯EBčnwôɍėª²CλŹġǝʅįĭạ̃ūȹ]ΓͧgšsgȽóϧµǛęgſ¶ҍć`ĘąŌJÞä¤rÅň¥ÖÁUětęuůÞiĊÄÀ\\\\Æs¦ÓRb|Â^řÌkÄŷ¶½÷f±iMÝ@ĥ°G¬ÃM¥n£Øąğ¯ß§aëbéüÑOčk£{\\\\eµª×MÉfm«Ƒ{Å×Gŏǩãy³©WÑăû··Qòı}¯ãIéÕÂZ¨īès¶ZÈsæĔTŘvgÌsN@îá¾ó@ÙwU±ÉTå»£TđWxq¹Zobs[×¯cĩvėŧ³BM|¹kªħ¥TzNYnÝßpęrñĠĉRS~½ěVVµõ«M££µBĉ¥áºae~³AuĐh`Ü³ç@BÛïĿa©|z²Ý¼D£àč²ŸIûI āóK¥}rÝ_Á´éMaň¨~ªSĈ½½KÙóĿeƃÆB·¬ën×W|Uº}LJrƳlŒµ`bÔ`QÐÓ@s¬ñIÍ@ûws¡åQÑßÁ`ŋĴ{ĪTÚÅTSÄ³Yo|Ç[Ç¾µMW¢ĭiÕØ¿@MhpÕ]jéò¿OƇĆƇpêĉâlØwěsǩĵ¸cbU¹ř¨WavquSMzeo_^gsÏ·¥Ó@~¯¿RiīB\\\\qTGªÇĜçPoÿfñòą¦óQīÈáPābß{ZŗĸIæÅhnszÁCËìñÏ·ąĚÝUm®ó­L·ăUÈíoù´Êj°ŁŤ_uµ^°ìÇ@tĶĒ¡ÆM³Ģ«İĨÅ®ğRāðggheÆ¢zÊ©Ô\\\\°ÝĎz~ź¤PnMĪÖB£kné§żćĆKĒ°¼L¶èâz¨u¦¥LDĘz¬ýÎmĘd¾ßFzhg²Fy¦ĝ¤ċņbÎ@yĄæm°NĮZRÖíJ²öLĸÒ¨Y®ƌÐVàtt_ÚÂyĠz]ŢhzĎ{ÂĢXc|ÐqfO¢¤ögÌHNPKŖUú´xx[xvĐCûĀìÖT¬¸^}Ìsòd´_KgžLĴÀBon|H@Êx¦BpŰŌ¿fµƌA¾zǈRx¶FkĄźRzŀ~¶[´HnªVƞuĒ­È¨ƎcƽÌm¸ÁÈM¦x͊ëÀxǆBú^´W£dkɾĬpw˂ØɦļĬIŚÊnŔa¸~J°îlɌxĤÊÈðhÌ®gT´øàCÀ^ªerrƘd¢İP|Ė ŸWªĦ^¶´ÂLaT±üWƜǀRÂŶUńĖ[QhlLüAÜ\\\\qRĄ©\"],\"encodeOffsets\":[[90849,37210]]},\"properties\":{\"cp\":[91.132212,29.660361],\"name\":\"西藏\",\"childNum\":1}},{\"id\":\"610000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@p¢ȮµûGĦ}Ħðǚ¶òƄjɂz°{ºØkÈęâ¦jªBg\\\\ċ°s¬]jú EȌǆ¬stRÆdĠİwÜ¸ôW¾ƮłÒ_{Ìû¼jº¹¢GǪÒ¯ĘZ`ºŊecņą~BÂgzpâēòYǠȰÌTÎ¨ÂW|fcă§uF@N¢XLRMº[ğȣſï|¥Jkc`sŉǷY¹W@µ÷Kãï³ÛIcñ·VȋÚÒķø©þ¥yÓğęmWµÎumZyOŅƟĥÓ~sÑL¤µaÅY¦ocyZ{y c]{Ta©`U_Ěē£ωÊƍKùK¶ȱÝƷ§{û»ÅÁȹÍéuĳ|¹cÑdìUYOuFÕÈYvÁCqÓTǢí§·S¹NgV¬ë÷Át°DØ¯C´ŉƒópģ}ċcEËFéGU¥×K§­¶³BČ}C¿åċ`wġB·¤őcƭ²ő[Å^axwQOÿEËßŚĤNĔwƇÄńwĪ­o[_KÓª³ÙnKÇěÿ]ďă_d©·©Ýŏ°Ù®g]±ßå¬÷m\\\\iaǑkěX{¢|ZKlçhLtŇîŵœè[É@ƉĄEtƇÏ³­ħZ«mJ×¾MtÝĦ£IwÄå\\\\Õ{OwĬ©LÙ³ÙgBƕŀrÌĢŭO¥lãyC§HÍ£ßEñX¡­°ÙCgpťzb`wIvA|§hoĕ@E±iYd¥OĻ¹S|}F@¾oAO²{tfÜ¢FǂÒW²°BĤh^Wx{@¬­F¸¡ķn£P|ªĴ@^ĠĈæbÔc¶lYi^MicĎ°Â[ävï¶gv@ÀĬ·lJ¸sn|¼u~a]ÆÈtŌºJpþ£KKf~¦UbyäIĺãnÔ¿^­ŵMThĠÜ¤ko¼Ŏìąǜh`[tRd²Ĳ_XPrɲlXiL§à¹H°Ȧqº®QCbAŌJ¸ĕÚ³ĺ§ `d¨YjiZvRĺ±öVKkjGȊÄePĞZmļKÀ[`ösìhïÎoĬdtKÞ{¬èÒÒBÔpĲÇĬJŊ¦±J«Y§@·pHµàåVKepWftsAÅqC·¬ko«pHÆuK@oHĆÛķhxenS³àǍrqƶRbzy¸ËÐl¼EºpĤ¼x¼½~Ğà@ÚüdK^mÌSj\"],\"encodeOffsets\":[[110234,38774]]},\"properties\":{\"cp\":[108.948024,34.263161],\"name\":\"陕西\",\"childNum\":1}},{\"id\":\"620000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@VuUv\"],[\"@@ũEĠtt~nkh`Q¦ÅÄÜdwAb×ĠąJ¤DüègĺqBqj°lI¡ĨÒ¤úSHbjÎB°aZ¢KJO[|A£Dx}NĂ¬HUnrk kp¼Y kMJn[aGáÚÏ[½rc}aQxOgsPMnUsncZsKúvAtÞġ£®ĀYKdnFw¢JE°Latf`¼h¬we|Æbj}GA·~W`¢MC¤tL©Ĳ°qdfObÞĬ¹ttu`^ZúE`[@Æsîz®¡CƳƜG²R¢RmfwĸgÜą G@pzJM½mhVy¸uÈÔO±¨{LfæU¶ßGĂq\\\\ª¬²I¥IŉÈīoıÓÑAçÑ|«LÝcspīðÍgtë_õ\\\\ĉñLYnĝgRǡÁiHLlõUĹ²uQjYi§Z_c¨´ĹĖÙ·ŋIaBD­R¹ȥr¯GºßK¨jWkɱOqWĳ\\\\a­Q\\\\sg_ĆǛōëp»£lğÛgSŶN®À]ÓämĹãJaz¥V}Le¤Lýo¹IsŋÅÇ^bz³tmEÁ´a¹cčecÇNĊãÁ\\\\č¯dNj]jZµkÓdaćå]ğĳ@ ©O{¤ĸm¢E·®«|@Xwg]Aģ±¯XǁÑǳªcwQÚŝñsÕ³ÛV_ý¥\\\\ů¥©¾÷w©WÕÊĩhÿÖÁRo¸V¬âDb¨hûxÊ×ǌ~Zâg|XÁnßYoº§ZÅŘv[ĭÖʃuďxcVbnUSfB¯³_TzºÎO©çMÑ~M³]µ^püµÄY~y@X~¤Z³[Èōl@®Å¼£QK·Di¡ByÿQ_´D¥hŗy^ĭÁZ]cIzýah¹MĪğPs{ò²Vw¹t³ŜË[Ñ}X\\\\gsF£sPAgěp×ëfYHāďÖqēŭOÏëdLü\\\\it^c®RÊº¶¢H°mrY£B¹čIoľu¶uI]vģSQ{UŻÅ}QÂ|Ì°ƅ¤ĩŪU ęĄÌZÒ\\\\v²PĔ»ƢNHĂyAmƂwVm`]ÈbH`Ì¢²ILvĜH®¤Dlt_¢JJÄämèÔDëþgºƫaʎÌrêYi~ Îİ¤NpÀA¾Ĕ¼bð÷®üszMzÖĖQdȨýv§Tè|ªHÃ¾a¸|Ð ƒwKĢx¦ivr^ÿ ¸l öæfƟĴ·PJv}n\\\\h¹¶v·À|\\\\ƁĚN´ĜçèÁz]ġ¤²¨QÒŨTIlªťØ}¼˗ƦvÄùØEÂ«FïËIqōTvāÜŏíÛßÛVj³âwGăÂíNOPìyV³ŉĖýZso§HÑiYw[ß\\\\X¦¥c]ÔƩÜ·«jÐqvÁ¦m^ċ±R¦΋ƈťĚgÀ»IïĨʗƮ°ƝĻþÍAƉſ±tÍEÕÞāNUÍ¡\\\\ſčåÒʻĘm ƭÌŹöʥëQ¤µ­ÇcƕªoIýIÉ_mkl³ăƓ¦j¡YzŇi}Msßõīʋ }ÁVm_[n}eı­Uĥ¼ªI{Î§DÓƻėojqYhĹT©oūĶ£]ďxĩǑMĝq`B´ƃ˺Чç~²ņj@¥@đ´ί}ĥtPńÇ¾V¬ufÓÉCtÓ̻¹£G³]ƖƾŎĪŪĘ̖¨ʈĢƂlɘ۪üºňUðǜȢƢż̌ȦǼĤŊɲĖÂ­Kq´ï¦ºĒǲņɾªǀÞĈĂD½ĄĎÌŗĞrôñnN¼â¾ʄľԆ|Ǆ֦ज़ȗǉ̘̭ɺƅêgV̍ʆĠ·ÌĊv|ýĖÕWĊǎÞ´õ¼cÒÒBĢ͢UĜð͒s¨ňƃLĉÕÝ@ɛƯ÷¿Ľ­ĹeȏĳëCȚDŲyê×Ŗyò¯ļcÂßYtÁƤyAã˾J@ǝrý@¤rz¸oP¹ɐÚyáHĀ[JwcVeȴÏ»ÈĖ}ƒŰŐèȭǢόĀƪÈŶë;Ñ̆ȤМľĮEŔĹŊũ~ËUă{ĻƹɁύȩþĽvĽƓÉ@ēĽɲßǐƫʾǗĒpäWÐxnsÀ^ƆwW©¦cÅ¡Ji§vúF¶¨c~c¼īeXǚ\\\\đ¾JwÀďksãAfÕ¦L}waoZD½Ml«]eÒÅaÉ²áo½FõÛ]ĻÒ¡wYR£¢rvÓ®y®LFLzĈôe]gx}|KK}xklL]c¦£fRtív¦PĤoH{tK\"]],\"encodeOffsets\":[[[108619,36299]],[[108589,36341]]]},\"properties\":{\"cp\":[103.823557,36.058039],\"name\":\"甘肃\",\"childNum\":2}},{\"id\":\"630000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@InJm\"],[\"@@CÆ½OŃĦsΰ~Ē³¦@@Ņi±è}ШƄ˹A³r_ĞǒNĪĐw¤^ŬĵªpĺSZgrpiƼĘÔ¨C|ÍJ©Ħ»®VĲ~f\\\\m `UnÂ~ʌĬàöNt~ňjy¢ZiƔ¥Ąk´nl`JÊJþ©pdƖ®È£¶ìRʦźõƮËnʼėæÑƀĎ[¢VÎĂMÖÝÎF²sƊƀÎBļýƞ¯ʘƭðħ¼Jh¿ŦęΌƇ¥²Q]Č¥nuÂÏri¸¬ƪÛ^Ó¦d¥[Wàx\\\\ZjÒ¨GtpþYŊĕ´zUOëPîMĄÁxH´áiÜUàîÜŐĂÛSuŎrJðÌ¬EFÁú×uÃÎkrĒ{V}İ«O_ÌËĬ©ÓŧSRÑ±§Ģ£^ÂyèçěM³Ƃę{[¸¿uºµ[gt£¸OƤĿéYõ·kĀq]juw¥DĩƍõÇPéÄ½G©ã¤GuȧþRcÕĕNyyût­øï»a½ē¿BMoį£Íj}éZËqbʍƬh¹ìÿÓAçãnIÃ¡I`ks£CG­ěUy×Cy@¶ʡÊBnāzGơMē¼±O÷õJËĚăVĪũƆ£¯{ËL½ÌzżVR|ĠTbuvJvµhĻĖHAëáa­OÇðñęNwœľ·LmI±íĠĩPÉ×®ÿscB³±JKßĊ«`ađ»·QAmOVţéÿ¤¹SQt]]Çx±¯A@ĉĳ¢Óļ©l¶ÅÛrŕspãRk~¦ª]Į­´FRåd­ČsCqđéFn¿ÅƃmÉx{W©ºƝºįkÕƂƑ¸wWūÐ©ÈF£\\\\tÈ¥ÄRÈýÌJ lGr^×äùyÞ³fjc¨£ÂZ|ǓMĝÏ@ëÜőRĝ÷¡{aïȷPu°ËXÙ{©TmĠ}Y³­ÞIňµç½©C¡į÷¯B»|St»]vųs»}MÓ ÿʪƟǭA¡fs»PY¼c¡»¦cċ­¥£~msĉPSi^o©AecPeǵkgyUi¿h}aHĉ^|á´¡HØûÅ«ĉ®]m¡qĉ¶³ÈyôōLÁstB®wn±ă¥HSòė£Së@×œÊăxÇN©©T±ª£Ĳ¡fb®Þbb_Ą¥xu¥B{łĝ³«`dƐt¤ťiñÍUuºí`£^tƃĲc·ÛLO½sç¥Ts{ă\\\\_»kÏ±q©čiìĉ|ÍI¥ć¥]ª§D{ŝŖÉR_sÿc³ĪōƿÎ§p[ĉc¯bKmR¥{³Ze^wx¹dƽÅ½ôIg §Mĕ ƹĴ¿ǣÜÍ]Ý]snåA{eƭ`ǻŊĿ\\\\ĳŬűYÂÿ¬jĖqßb¸L«¸©@ěĀ©ê¶ìÀEH|´bRľÓ¶rÀQþvl®ÕETzÜdb hw¤{LRdcb¯ÙVgƜßzÃôì®^jUèXÎ|UäÌ»rK\\\\ªN¼pZCüVY¤ɃRi^rPŇTÖ}|br°qňbĚ°ªiƶGQ¾²x¦PmlŜ[Ĥ¡ΞsĦÔÏâ\\\\ªÚŒU\\\\f¢N²§x|¤§xĔsZPòʛ²SÐqF`ªVÞŜĶƨVZÌL`¢dŐIqr\\\\oäõFÎ·¤»Ŷ×h¹]ClÙ\\\\¦ďÌį¬řtTӺƙgQÇÓHţĒ´ÃbEÄlbʔC|CŮkƮ[ʼ¬ň´KŮÈΰÌĪ¶ƶlðļATUvdTGº̼ÔsÊDÔveOg\"]],\"encodeOffsets\":[[[105308,37219]],[[95370,40081]]]},\"properties\":{\"cp\":[101.778916,36.623178],\"name\":\"青海\",\"childNum\":2}},{\"id\":\"640000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@KëÀęĞ«Oęȿȕı]ŉ¡åįÕÔ«ǴõƪĚQÐZhv K°öqÀÑS[ÃÖHƖčËnL]ûcÙß@ĝ¾}w»»oģF¹»kÌÏ·{zP§B­¢íyÅt@@á]Yv_ssģ¼ißĻL¾ġsKD£¡N_X¸}B~HaiÅf{«x»ge_bsKF¯¡IxmELcÿZ¤­ĢÝsuBLùtYdmVtNmtOPhRw~bd¾qÐ\\\\âÙH\\\\bImlNZ»loqlVmGā§~QCw¤{A\\\\PKNY¯bFkC¥sks_Ã\\\\ă«¢ħkJi¯rrAhĹûç£CUĕĊ_ÔBixÅÙĄnªÑaM~ħpOu¥sîeQ¥¤^dkKwlL~{L~hw^ófćKyE­K­zuÔ¡qQ¤xZÑ¢^ļöÜ¾Ep±âbÊÑÆ^fk¬NC¾YpxbK~¥eÖäBlt¿Đx½I[ĒǙWf»Ĭ}d§dµùEuj¨IÆ¢¥dXªƅx¿]mtÏwßRĶX¢͎vÆzƂZò®ǢÌʆCrâºMÞzÆMÒÊÓŊZÄ¾r°Î®Ȉmª²ĈUªĚîøºĮ¦ÌĘk^FłĬhĚiĀĖ¾iİbjÕ\"],[\"@@mfwěwMrŢªv@G\"]],\"encodeOffsets\":[[[109366,40242]],[[108600,36303]]]},\"properties\":{\"cp\":[106.278179,38.46637],\"name\":\"宁夏\",\"childNum\":2}},{\"id\":\"650000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@QØĔ²X¨~ǘBºjʐßØvKƔX¨vĊOÃ·¢i@~cĝe_«E}QxgɪëÏÃ@sÅyXoŖ{ô«ŸuXêÎf`C¹ÂÿÐGĮÕĞXŪōŸMźÈƺQèĽôe|¿ƸJR¤ĘEjcUóº¯Ĩ_ŘÁMª÷Ð¥OéÈ¿ÖğǤǷÂFÒzÉx[]­Ĥĝœ¦EP}ûƥé¿İƷTėƫœŕƅƱB»Đ±ēO¦E}`cȺrĦáŖuÒª«ĲπdƺÏØZƴwʄ¤ĖGĐǂZĶèH¶}ÚZצʥĪï|ÇĦMŔ»İĝǈì¥Βba­¯¥ǕǚkĆŵĦɑĺƯxūД̵nơʃĽá½M»òmqóŘĝčË¾ăCćāƿÝɽ©ǱŅ¹đ¥³ðLrÁ®ɱĕģŉǻ̋ȥơŻǛȡVï¹Ň۩ûkɗġƁ§ʇė̕ĩũƽō^ƕUv£ƁQïƵkŏ½ΉÃŭÇ³LŇʻ«ƭ\\\\lŭD{ʓDkaFÃÄa³ŤđÔGRÈƚhSӹŚsİ«ĐË[¥ÚDkº^Øg¼ŵ¸£EÍöůŉT¡c_ËKYƧUśĵÝU_©rETÏʜ±OñtYwē¨{£¨uM³x½şL©Ùá[ÓÐĥ Νtģ¢\\\\śnkOw¥±T»ƷFɯàĩÞáB¹ÆÑUwŕĽw[mG½Èå~Æ÷QyěCFmĭZīŵVÁƿQƛûXS²b½KÏ½ĉS©ŷXĕ{ĕK·¥Ɨcqq©f¿]ßDõU³h­gËÇïģÉɋwk¯í}I·œbmÉřīJɥĻˁ×xoɹīlc¤³Xù]ǅA¿w͉ì¥wÇN·ÂËnƾƍdÇ§đ®ƝvUm©³G\\\\}µĿQyŹlăµEwǇQ½yƋBe¶ŋÀůo¥AÉw@{Gpm¿AĳŽKLh³`ñcËtW±»ÕSëüÿďDu\\\\wwwù³VLŕOMËGh£õP¡erÏd{ġWÁč|yšg^ğyÁzÙs`s|ÉåªÇ}m¢Ń¨`x¥ù^}Ì¥H«YªƅAÐ¹n~ź¯f¤áÀzgÇDIÔ´AňĀÒ¶ûEYospõD[{ù°]uJqU|Soċxţ[õÔĥkŋÞŭZËºóYËüċrw ÞkrťË¿XGÉbřaDü·Ē÷AÃª[ÄäIÂ®BÕĐÞ_¢āĠpÛÄȉĖġDKwbmÄNôfƫVÉviǳHQµâFù­Âœ³¦{YGd¢ĚÜO {Ö¦ÞÍÀP^bƾl[vt×ĈÍEË¨¡Đ~´î¸ùÎhuè`¸HÕŔVºwĠââWò@{ÙNÝ´ə²ȕn{¿¥{l÷eé^eďXj©î\\\\ªÑòÜìc\\\\üqÕ[Č¡xoÂċªbØ­ø|¶ȴZdÆÂońéG\\\\¼C°ÌÆn´nxÊOĨŪƴĸ¢¸òTxÊǪMīĞÖŲÃɎOvʦƢ~FRěò¿ġ~åŊúN¸qĘ[Ĕ¶ÂćnÒPĒÜvúĀÊbÖ{Äî¸~Ŕünp¤ÂH¾ĄYÒ©ÊfºmÔĘcDoĬMŬS¤s²ʘÚžȂVŦ èW°ªB|ĲXŔþÈJĦÆæFĚêYĂªĂ]øªŖNÞüAfɨJ¯ÎrDDĤ`mz\\\\§~D¬{vJÂ«lµĂb¤pŌŰNĄ¨ĊXW|ų ¿¾ɄĦƐMTòP÷fØĶK¢ȝ˔Sô¹òEð­`Ɩ½ǒÂň×äı§ĤƝ§C~¡hlåǺŦŞkâ~}FøàĲaĞfƠ¥Ŕd®U¸źXv¢aƆúŪtŠųƠjdƺƺÅìnrh\\\\ĺ¯äɝĦ]èpĄ¦´LƞĬ´ƤǬ˼Ēɸ¤rºǼ²¨zÌPðŀbþ¹ļD¢¹\\\\ĜÑŚ¶ZƄ³àjĨoâȴLÊȮĐ­ĚăÀêZǚŐ¤qȂ\\\\L¢ŌİfÆs|zºeªÙæ§΢{Ā´ƐÚ¬¨Ĵà²łhʺKÞºÖTiƢ¾ªì°`öøu®Ê¾ãØ\"],\"encodeOffsets\":[[88824,50096]]},\"properties\":{\"cp\":[87.617733,43.792818],\"name\":\"新疆\",\"childNum\":1}},{\"id\":\"110000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĽOÁûtŷmiÍt_H»Ĩ±d`¹­{bwYr³S]§§o¹qGtm_SŧoaFLgQN_dV@Zom_ć\\\\ßcÂ±x¯oœRcfe£o§ËgToÛJíĔóu|wP¤XnO¢ÉŦ¯rNÄā¤zâŖÈRpŢZÚ{GrFt¦Òx§ø¹RóäV¤XdżâºWbwŚ¨Ud®bêņ¾jnŎGŃŶnzÚSeîĜZczî¾i]ÍQaúÍÔiþĩȨWĢü|Ėu[qb[swP@ÅğP¿{\\\\¥A¨ÏÑ¨j¯X\\\\¯MKpA³[Hīu}}\"],\"encodeOffsets\":[[120023,41045]]},\"properties\":{\"cp\":[116.405285,39.904989],\"name\":\"北京\",\"childNum\":1}},{\"id\":\"120000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŬgX§Ü«E¶FÌ¬O_ïlÁgz±AXeµÄĵ{¶]gitgIj·¥îakS¨ÐƎk}ĕ{gBqGf{¿aU^fIư³õ{YıëNĿk©ïËZŏR§òoY×Ógcĥs¡bġ«@dekąI[nlPqCnp{ō³°`{PNdƗqSÄĻNNâyj]äÒD ĬH°Æ]~¡HO¾X}ÐxgpgWrDGpù^LrzWxZ^¨´T\\\\|~@IzbĤjeĊªz£®ĔvěLmV¾Ô_ÈNW~zbĬvG²ZmDM~~\"],\"encodeOffsets\":[[120237,41215]]},\"properties\":{\"cp\":[117.190182,39.125596],\"name\":\"天津\",\"childNum\":1}},{\"id\":\"310000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɧư¬EpƸÁxc\"],[\"@@©ª\"],[\"@@MA\"],[\"@@QpİE§ÉC¾\"],[\"@@bŝÕÕEȣÚƥêImɇǦèÜĠÚÃƌÃ͎ó\"],[\"@@ǜûȬɋŭ×^sYɍDŋŽąñCG²«ªč@h_p¯A{oloY¬j@Ĳ`gQÚhr|ǀ^MĲvtbe´R¯Ô¬¨Yô¤r]ìƬį\"]],\"encodeOffsets\":[[[124702,32062]],[[124547,32200]],[[124808,31991]],[[124726,32110]],[[124903,32376]],[[124438,32149]]]},\"properties\":{\"cp\":[121.472644,31.231706],\"name\":\"上海\",\"childNum\":6}},{\"id\":\"500000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@vjG~nGŘŬĶȂƀƾ¹¸ØÎezĆT¸}êÐqHðqĖä¥^CÆIj²p\\\\_ æüY|[YxƊæu°xb®Űb@~¢NQt°¶Sæ Ê~rǉĔëĚ¢~uf`faĔJåĊnÖ]jƎćÊ@£¾a®£Ű{ŶĕFègLk{Y|¡ĜWƔtƬJÑxq±ĢN´òKLÈÃ¼D|s`ŋć]Ã`đMûƱ½~Y°ħ`ƏíW½eI½{aOIrÏ¡ĕŇapµÜƅġ^ÖÛbÙŽŏml½SêqDu[RãË»ÿw`»y¸_ĺę}÷`M¯ċfCVµqŉ÷Zgg`d½pDOÎCn^uf²ènh¼WtƏxRGg¦pVFI±G^Ic´ecGĹÞ½sëĬhxW}KÓe­XsbkF¦LØgTkïƵNï¶}Gyw\\\\oñ¡nmĈzj@Óc£»Wă¹Ój_m»¹·~MvÛaq»­ê\\\\ÂoVnÓØÍ²«bq¿efE Ĝ^Q~ Évýş¤²ĮpEİ}zcĺL½¿gÅ¡ýE¡ya£³t\\\\¨\\\\vú»¼§·Ñr_oÒý¥u_n»_At©ÞÅ±ā§IVeëY}{VPÀFA¨ąB}q@|Ou\\\\FmQFÝMwå}]|FmÏCawu_p¯sfÙgYDHl`{QEfNysB¦zG¸rHeN\\\\CvEsÐùÜ_·ÖĉsaQ¯}_UxÃđqNH¬Äd^ÝŰR¬ã°wećJE·vÝ·HgéFXjÉê`|ypxkAwWĐpb¥eOsmzwqChóUQl¥F^lafanòsrEvfQdÁUVfÎvÜ^eftET¬ôA\\\\¢sJnQTjPØxøK|nBzĞ»LYFDxÓvr[ehľvN¢o¾NiÂxGpâ¬zbfZo~hGi]öF||NbtOMn eA±tPTLjpYQ|SHYĀxinzDJÌg¢và¥Pg_ÇzIIII£®S¬ØsÎ¼£N\"],[\"@@ifjN@s\"]],\"encodeOffsets\":[[[109628,30765]],[[111725,31320]]]},\"properties\":{\"cp\":[106.504962,29.533155],\"name\":\"重庆\",\"childNum\":2}},{\"id\":\"810000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@AlBk\"],[\"@@mn\"],[\"@@EpFo\"],[\"@@ea¢pl¸Eõ¹hj[]ÔCÎ@lj¡uBX´AI¹[yDU]W`çwZkmcMpÅv}IoJlcafŃK°ä¬XJmÐ đhI®æÔtSHnEÒrÈc\"],[\"@@rMUwAS®e\"]],\"encodeOffsets\":[[[117111,23002]],[[117072,22876]],[[117045,22887]],[[116975,23082]],[[116882,22747]]]},\"properties\":{\"cp\":[114.173355,22.320048],\"name\":\"香港\",\"childNum\":5}},{\"id\":\"820000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@kÊd°å§s\"],\"encodeOffsets\":[[116279,22639]]},\"properties\":{\"cp\":[113.54909,22.198951],\"name\":\"澳门\",\"childNum\":1}}],\"UTF8Encoding\":true});\n}));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}